{"version":3,"sources":["components/LandingPageComponent.tsx","components/Menu/menuItems.ts","components/Menu/MenuComponent.tsx","components/Bookings/ChildComponents/Buttons.tsx","utils/getTodaysDate.ts","components/Bookings/ChildComponents/CalanderComponent.tsx","svgs/taken.svg","components/Bookings/ChildComponents/SittingsComponents.tsx","utils/countNumOfTables.ts","utils/checkAvailability.ts","utils/updateComplexBookingObject.ts","utils/scrollToElement.ts","firebase.ts","components/Bookings/ChildComponents/GuestInfoComponent.tsx","models/IBookingState.ts","utils/emailSendOut.ts","components/Bookings/ChildComponents/Spinner.tsx","components/Bookings/BookingsComponent.tsx","components/PageNotFound.tsx","components/Contact/ChildComponents/GoogleMap.tsx","components/Contact/Contact.tsx","utils/randomIndexGen.ts","components/Admin/ChildComponents/DialogBox.tsx","utils/deleteBookingFromDB.ts","components/Cancellation/BookingCardCancellation.tsx","components/Cancellation/CancellationComponent.tsx","components/ConfirmCancellation/ConfirmCancellationComponent.tsx","components/Bookings/BookingConfirmation.tsx","components/Admin/BookingCard.tsx","components/Admin/AdminBookingsComponent.tsx","utils/isDatePassed.ts","components/Admin/AdminEditComponent.tsx","components/HomeButtonComponent.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["LandingPageComponent","className","width","height","viewBox","fill","xmlns","d","to","onClick","window","scrollBy","innerHeight","menuItems","name","price","category","MenuComponent","itemsOnTheMenu","map","item","i","toLocaleString","style","currency","config","mass","tension","friction","SingleButton","styled","button","Buttons","props","listOfButtons","useState","lastPickedNumber","setLastPickedNumber","numberPickedByGuest","push","e","setNumberOfGuests","addButtons","trail","useTrail","length","from","opacity","y","styles","div","getTodaysDate","todaysDate","Date","getFullYear","getMonth","getDate","CalanderComponent","change","plugins","dayGridPlugin","interactionPlugin","initialView","editable","themeSystem","selectable","handleWindowResize","headerToolbar","start","center","end","footerToolbar","left","right","dateClick","getTime","dateStr","toast","error","SquareButton","SittingsComponents","sectionRef","useRef","handleClick","target","current","children","thisElementsClasses","classList","contains","remove","add","updateSitting","id","ref","availableTables","sitting18","sitting21","src","taken","alt","countNumberOfTables","numOfGuests","checkAvailability","firestoreSnapshop","dateFromClientBooking","numberOfBookedTables18","numberOfBookedTables21","forEach","bookingInDB","date","sitting","numberOfTables","updateComplexBookingObject","stateSetterFn","newProp","prevState","scrollToElement","element","scrollIntoView","behavior","firebase","apps","app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","db","firestore","GuestInfoComponent","useForm","control","handleSubmit","updateInformation","onSubmit","data","rules","required","min","max","render","onChange","field","invalid","fieldState","TextField","type","label","variant","fullWidth","helperText","pattern","FormControl","FormControlLabel","Checkbox","color","href","FormHelperText","Button","initialBookingState","numberOfGuests","firstName","lastName","email","number","acceptedGDPR","bookingReference","sendEmailCancellation","dataObject","emailSendOutCredentials","first_name","last_name","booked_date","booked_time","user_email","booking_reference","emailjs","send","then","result","console","log","status","text","alert","SpinnerContainer","Spinner","visible","defaultProps","BookingsComponent","bookingsCollectionRef","collection","useCollectionData","idField","snapshot","headerFadeIn","useSpring","scale","duration","bookingState","setBookingState","numberOfGuestsPicked","setNumberOfGuestsPicked","datePicked","setDatePicked","sittingPicked","setSittingPicked","loading","setLoading","bookingAllowed","setBookingAllowed","calanderRef","sittingRef","guestInfoRef","useEffect","sittingAvailability","setSittingAvailability","history","useHistory","Object","values","every","Boolean","res","stateObject","sendEmailConfirmation","position","reverseOrder","numberOfGuestsObj","userInfomation","userInfoObj","randomstring","generate","PageNotfound","GoogleMap","Contact","randomIndexGen","maxIdx","Math","floor","random","DialogBox","open","closeDialog","deleteBooking","handleClose","innerText","Dialog","DialogTitle","DialogContent","DialogContentText","DialogActions","autoFocus","linkToDelete","deleteBookingAndSendConfirmation","bookingObj","doc","delete","BookingCardCancellation","dialogBoxOpen","setDialogBoxOpen","foodEmojis","randomIdx","toggleDialogBox","Card","CardContent","Divider","light","Delete","CancellationComponent","redirect","useParams","setData","booking","ConfirmCancellationComponent","BookingConfirmation","BookingCard","Edit","AdminBookingsComponent","bookinsRef","orderBy","bookingCards","message","toString","isDatePassed","dateToCompare","AdminEdit","isUpdateAllowed","setIsUpdateAllowed","setBooking","setRedirect","handleChangeInputFields","value","formFieldObject","updatedBooking","update","preventDefault","errorMessage","Grid","container","direction","justifyContent","alignItems","dateChosen","handleChangeDate","RadioGroup","Radio","InputLabel","Select","Number","handleChangeNumberOfGuests","options","MenuItem","selectOptions","HomeButtonComponent","Fab","App","exact","path","PageNotFound","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.6824f1be.chunk.js","sourcesContent":["import { Link } from \"react-router-dom\";\r\n\r\nexport default function LandingPageComponent() {\r\n  function scroll() {\r\n    window.scrollBy(0, window.innerHeight);\r\n  }\r\n\r\n  return (\r\n    <div className=\"landingPageContainer\">\r\n      <svg\r\n        className=\"heading\"\r\n        width=\"10em\"\r\n        height=\"6em\"\r\n        viewBox=\"0 0 150 66\"\r\n        fill=\"none\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n      >\r\n        <path\r\n          d=\"M1.74805 18H0.576172L3.18359 3H4.35547L1.74805 18ZM11.4746 18C11.4421 17.7526 11.4323 17.5052 11.4453 17.2578L11.5332 16.5254C11.0449 17.0527 10.485 17.4661 9.85352 17.7656C9.22852 18.0651 8.55143 18.2083 7.82227 18.1953C6.93034 18.1823 6.20443 17.9023 5.64453 17.3555C5.09115 16.8021 4.84375 16.1087 4.90234 15.2754C4.95443 14.5788 5.19206 13.9766 5.61523 13.4688C6.04492 12.9544 6.65365 12.5573 7.44141 12.2773C8.22917 11.9909 9.11133 11.8477 10.0879 11.8477L12.2461 11.8574L12.4219 10.6465C12.5 9.92383 12.3438 9.3444 11.9531 8.9082C11.5625 8.47201 10.9863 8.24089 10.2246 8.21484C9.45638 8.20182 8.78581 8.39388 8.21289 8.79102C7.64648 9.18164 7.29167 9.69922 7.14844 10.3438H6.00586C6.13607 9.41927 6.61133 8.66732 7.43164 8.08789C8.25195 7.50195 9.22201 7.21549 10.3418 7.22852C11.429 7.25456 12.2656 7.58333 12.8516 8.21484C13.444 8.84635 13.6849 9.66667 13.5742 10.6758L12.6953 15.9883L12.6172 16.8379C12.5977 17.1895 12.6237 17.5378 12.6953 17.8828L12.6758 18H11.4746ZM8.01758 17.1699C8.73372 17.196 9.41732 17.0267 10.0684 16.6621C10.7259 16.291 11.2695 15.7669 11.6992 15.0898L12.0996 12.7559L10.2344 12.7461C9.04948 12.7461 8.08268 12.9577 7.33398 13.3809C6.58529 13.7975 6.17188 14.3965 6.09375 15.1777C6.03516 15.7507 6.1849 16.2227 6.54297 16.5938C6.90755 16.9648 7.39909 17.1569 8.01758 17.1699ZM19.4824 4.72852L19.0137 7.43359H21.1328L20.9668 8.39062H18.8477L17.6758 15.4414L17.6562 16.0469C17.6562 16.7565 17.9818 17.1211 18.6328 17.1406C18.8346 17.1471 19.1504 17.1243 19.5801 17.0723L19.5312 18.0293C19.1471 18.14 18.7565 18.1888 18.3594 18.1758C17.6758 18.1628 17.1777 17.9251 16.8652 17.4629C16.5527 16.9941 16.4388 16.3171 16.5234 15.4316L17.6855 8.39062H15.791L15.9668 7.43359H17.8418L18.3203 4.72852H19.4824ZM25.9082 18.1953C25.0618 18.1823 24.3294 17.9479 23.7109 17.4922C23.0924 17.0299 22.6367 16.4049 22.3438 15.6172C22.0573 14.8229 21.9564 13.9668 22.041 13.0488L22.0703 12.7168C22.1615 11.7402 22.4512 10.8125 22.9395 9.93359C23.4277 9.04818 24.0462 8.37435 24.7949 7.91211C25.5436 7.44336 26.3444 7.21875 27.1973 7.23828C27.985 7.2513 28.6491 7.46615 29.1895 7.88281C29.7363 8.29948 30.1335 8.87891 30.3809 9.62109C30.6283 10.3633 30.7064 11.1836 30.6152 12.082L30.5371 12.7949H23.2227L23.1934 13.0293C23.0957 13.7389 23.1478 14.4193 23.3496 15.0703C23.5514 15.7148 23.8802 16.2292 24.3359 16.6133C24.7982 16.9909 25.3516 17.1862 25.9961 17.1992C26.6211 17.2188 27.1842 17.0983 27.6855 16.8379C28.1868 16.5775 28.6491 16.2292 29.0723 15.793L29.7559 16.3496C29.2806 16.9616 28.7142 17.4271 28.0566 17.7461C27.4056 18.0586 26.6895 18.2083 25.9082 18.1953ZM27.1387 8.23438C26.2923 8.20182 25.5339 8.5013 24.8633 9.13281C24.1927 9.76432 23.6882 10.653 23.3496 11.7988L29.4824 11.8086L29.5117 11.6621C29.6289 10.7376 29.4661 9.94336 29.0234 9.2793C28.5807 8.60872 27.9525 8.26042 27.1387 8.23438ZM39.6094 7.43359L39.2578 9.24023C39.7266 8.58919 40.2669 8.09115 40.8789 7.74609C41.4974 7.39453 42.1582 7.22526 42.8613 7.23828C43.877 7.26432 44.6159 7.61914 45.0781 8.30273C45.5404 8.98633 45.7031 9.92708 45.5664 11.125L44.4141 18H43.2617L44.4141 11.1055C44.4531 10.7344 44.4596 10.3763 44.4336 10.0312C44.3229 8.8724 43.6914 8.27669 42.5391 8.24414C41.8555 8.23112 41.2174 8.4362 40.625 8.85938C40.0326 9.27604 39.5117 9.90755 39.0625 10.7539L37.8125 18H36.6602L38.4961 7.43359H39.6094ZM48.7207 18H47.5488L49.3945 7.43359H50.5566L48.7207 18ZM49.7168 4.37695C49.7493 3.95378 50.0293 3.68685 50.5566 3.57617C50.8105 3.62174 50.9896 3.70312 51.0938 3.82031C51.2044 3.93099 51.276 4.11654 51.3086 4.37695C51.2435 4.62435 51.1491 4.80664 51.0254 4.92383C50.9017 5.03451 50.7161 5.11589 50.4688 5.16797C49.9414 5.08984 49.6908 4.82617 49.7168 4.37695ZM57.1387 7.22852C57.7702 7.24805 58.3464 7.39779 58.8672 7.67773C59.388 7.95768 59.7982 8.38411 60.0977 8.95703L60.459 7.43359H61.543L59.7656 17.8145C59.6419 18.6999 59.362 19.4811 58.9258 20.1582C58.4896 20.8353 57.9297 21.3529 57.2461 21.7109C56.569 22.0755 55.8138 22.2448 54.9805 22.2188C54.3164 22.2057 53.6816 22.0397 53.0762 21.7207C52.4642 21.3952 51.9727 20.9427 51.6016 20.3633L52.3242 19.6797C52.9948 20.6888 53.8704 21.2064 54.9512 21.2324C55.9147 21.2585 56.7188 20.9655 57.3633 20.3535C58.0143 19.748 58.4245 18.9212 58.5938 17.873L58.8477 16.6426C57.9102 17.7168 56.7806 18.2344 55.459 18.1953C54.4694 18.1693 53.6979 17.7917 53.1445 17.0625C52.5977 16.3268 52.3112 15.3275 52.2852 14.0645C52.2461 12.8991 52.4414 11.7467 52.8711 10.6074C53.3008 9.4681 53.8835 8.61523 54.6191 8.04883C55.3613 7.47591 56.2012 7.20247 57.1387 7.22852ZM53.5059 12.8926L53.4473 13.8008C53.4277 14.8685 53.6133 15.6953 54.0039 16.2812C54.3945 16.8607 54.9707 17.1634 55.7324 17.1895C56.3835 17.2155 56.9922 17.0625 57.5586 16.7305C58.125 16.3984 58.6133 15.9069 59.0234 15.2559L59.8535 10.3242C59.6777 9.69271 59.3717 9.19466 58.9355 8.83008C58.5059 8.45898 57.9525 8.26367 57.2754 8.24414C56.2793 8.21159 55.4525 8.5957 54.7949 9.39648C54.1439 10.1973 53.7142 11.3626 53.5059 12.8926ZM65.3418 9.2207C66.3574 7.87305 67.5553 7.21224 68.9355 7.23828C69.9512 7.26432 70.6901 7.61914 71.1523 8.30273C71.6146 8.98633 71.7773 9.92708 71.6406 11.125L70.4883 18H69.3359L70.4883 11.1055C70.5273 10.7344 70.5339 10.3763 70.5078 10.0312C70.3971 8.8724 69.7656 8.27669 68.6133 8.24414C67.9297 8.23112 67.2917 8.4362 66.6992 8.85938C66.1068 9.27604 65.5859 9.90755 65.1367 10.7539L63.8867 18H62.7344L65.3418 3H66.4941L65.3418 9.2207ZM77.5684 4.72852L77.0996 7.43359H79.2188L79.0527 8.39062H76.9336L75.7617 15.4414L75.7422 16.0469C75.7422 16.7565 76.0677 17.1211 76.7188 17.1406C76.9206 17.1471 77.2363 17.1243 77.666 17.0723L77.6172 18.0293C77.2331 18.14 76.8424 18.1888 76.4453 18.1758C75.7617 18.1628 75.2637 17.9251 74.9512 17.4629C74.6387 16.9941 74.5247 16.3171 74.6094 15.4316L75.7715 8.39062H73.877L74.0527 7.43359H75.9277L76.4062 4.72852H77.5684Z\"\r\n          fill=\"#FF7B51\"\r\n        />\r\n        <path\r\n          d=\"M0.358887 52L4.68262 27.1172L12.4414 27.1343C15.3239 27.1457 17.4886 27.7324 18.9355 28.8945C20.3825 30.0566 21.0376 31.6916 20.9009 33.7993C20.7414 36.3172 19.2887 38.1572 16.543 39.3193C17.5342 39.6611 18.3032 40.3049 18.8501 41.2505C19.397 42.1847 19.6305 43.2899 19.5508 44.5659C19.3913 46.9129 18.4684 48.7415 16.7822 50.0518C15.1074 51.3506 12.8174 52 9.91211 52H0.358887ZM7.26318 41.165L6.08398 47.8813L10.0317 47.8984C11.2622 47.8984 12.2933 47.5965 13.125 46.9927C13.9567 46.3774 14.4523 45.5514 14.6118 44.5146C14.7713 43.4893 14.6289 42.6917 14.1846 42.1221C13.7516 41.541 13.0168 41.2277 11.98 41.1821L7.26318 41.165ZM7.87842 37.542L11.2793 37.5762C12.5439 37.5534 13.575 37.2572 14.3726 36.6875C15.1815 36.1178 15.6657 35.326 15.8252 34.312C16.11 32.3068 15.0562 31.2985 12.6636 31.2871L8.97217 31.27L7.87842 37.542ZM32.8638 42.8911H28.7964L27.207 52H22.1997L26.5234 27.1172L34.7607 27.1343C37.5179 27.1343 39.637 27.7837 41.1182 29.0825C42.6107 30.3813 43.2715 32.1872 43.1006 34.5C42.8613 37.918 41.0384 40.2935 37.6318 41.6265L41.1353 51.7266V52H35.8032L32.8638 42.8911ZM29.5142 38.7383L33.2397 38.7725C34.5614 38.7497 35.6494 38.3965 36.5039 37.7129C37.3698 37.0179 37.8882 36.078 38.0591 34.8931C38.2186 33.7879 38.042 32.922 37.5293 32.2954C37.0166 31.6688 36.202 31.3327 35.0854 31.2871L30.813 31.27L29.5142 38.7383ZM66.7358 27.1172L63.9331 43.5234C63.5457 46.2692 62.4064 48.4396 60.5151 50.0347C58.6239 51.6297 56.2769 52.4045 53.4741 52.3589C51.7196 52.3247 50.1929 51.943 48.894 51.2139C47.6066 50.4733 46.6553 49.4365 46.04 48.1035C45.4248 46.7591 45.214 45.2381 45.4077 43.5405L48.1934 27.1172H53.2007L50.415 43.5576C50.3353 44.1956 50.3296 44.7938 50.3979 45.3521C50.6258 47.1978 51.7253 48.1548 53.6963 48.2231C55.109 48.2687 56.2655 47.8813 57.1655 47.061C58.0656 46.2407 58.6466 45.0672 58.9087 43.5405L61.7114 27.1172H66.7358ZM86.2354 52H81.3818L74.4604 35.4058L71.5723 52H66.5649L70.8887 27.1172H75.7251L82.6636 43.7456L85.5518 27.1172H90.542L86.2354 52ZM111.016 43.6943C110.822 45.4147 110.235 46.9414 109.255 48.2744C108.276 49.596 107 50.6157 105.427 51.3335C103.855 52.0399 102.157 52.376 100.334 52.3418C98.6938 52.3076 97.264 51.9316 96.0449 51.2139C94.8258 50.4847 93.8631 49.4365 93.1567 48.0693C92.4618 46.6908 92.0687 45.1071 91.9775 43.3184C91.8978 41.917 92.0402 40.1738 92.4048 38.0889C92.7808 36.0039 93.4416 34.1525 94.3872 32.5347C95.3442 30.9168 96.4779 29.6351 97.7881 28.6895C99.6338 27.3678 101.742 26.7298 104.111 26.7754C106.686 26.821 108.726 27.6185 110.229 29.168C111.745 30.7061 112.576 32.848 112.725 35.5938L107.734 35.5767C107.734 34.0044 107.421 32.8537 106.794 32.1245C106.168 31.3953 105.194 31.008 103.872 30.9624C102.163 30.9054 100.756 31.515 99.6509 32.791C98.5571 34.0671 97.8223 35.9299 97.4463 38.3794C97.0817 40.7606 96.9222 42.5436 96.9678 43.7285C97.0247 45.2324 97.3608 46.3433 97.9761 47.061C98.5913 47.7674 99.4515 48.1377 100.557 48.1719C102.083 48.2288 103.302 47.87 104.214 47.0952C105.137 46.3091 105.746 45.1868 106.042 43.7285L111.016 43.6943ZM132.805 52H127.798L129.644 41.3359H119.988L118.125 52H113.118L117.441 27.1172H122.449L120.688 37.2002H130.361L132.104 27.1172H137.112L132.805 52Z\"\r\n          fill=\"#FF7B51\"\r\n        />\r\n        <path d=\"M0 55.418H136.924V57.127H0V55.418Z\" fill=\"#FF7B51\" />\r\n      </svg>\r\n\r\n      <div className=\"backgroundImage\">\r\n        <Link className=\"btn bookingBtn\" to=\"/bookings\">\r\n          BOOKING\r\n        </Link>\r\n        <Link className=\"btn contactBtn\" to=\"/contact\">\r\n          CONTACT\r\n        </Link>\r\n\r\n        <div className=\"btn menuBtn\" onClick={scroll}>\r\n          MENU\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","interface IMenuItems {\r\n  name: string;\r\n  price: number;\r\n  category: string;\r\n}\r\n\r\nexport const menuItems: IMenuItems[] = [\r\n  { name: \"Avocado Toast\", price: 80, category: \"food\" },\r\n  { name: \"Blueberry Pancakes\", price: 80, category: \"food\" },\r\n  { name: \"Scrambled Eggs\", price: 60, category: \"food\" },\r\n  { name: \"Eggs Benedict\", price: 75, category: \"food\" },\r\n  { name: \"Acai Bowl\", price: 85, category: \"food\" },\r\n  { name: \"English Breakfast\", price: 120, category: \"food\" },\r\n  { name: \"Brew Coffee\", price: 35, category: \"drink\" },\r\n  { name: \"Capuccino\", price: 40, category: \"drink\" },\r\n  { name: \"Latte\", price: 45, category: \"drink\" },\r\n  { name: \"Espresso\", price: 40, category: \"drink\" },\r\n  { name: \"Tea\", price: 30, category: \"drink\" },\r\n  { name: \"Fresh Juice\", price: 60, category: \"drink\" },\r\n];\r\n","import React, { FC } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { menuItems } from \"./menuItems\";\r\n\r\nconst MenuComponent: FC = () => {\r\n  const itemsOnTheMenu = menuItems.map((item, i) => {\r\n    return (\r\n      <div className=\"menuItemContainer\" key={i}>\r\n        <div className=\"menuItemName\">{item.name}</div>\r\n        <div className=\"menuItemPrice\">\r\n          {item.price.toLocaleString(\"sv-se\", {\r\n            style: \"currency\",\r\n            currency: \"SEK\",\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  });\r\n\r\n  function scroll() {\r\n    window.scrollBy(0, -window.innerHeight)\r\n  }\r\n\r\n  return (\r\n    <div className=\"menuContainer\">\r\n      <svg onClick={scroll} className=\"heading\" width=\"10em\" height=\"5em\" viewBox=\"0 0 150 66\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n        <path d=\"M2.50488 12.1763V12.7988L2.79053 12.1177L5.68359 6.0752H6.43066L7.21436 12.1323L7.2583 12.8794L7.55859 12.125L10.1807 6.0752H11.1108L7.49268 14H6.74561L5.87402 7.71582L5.8667 7.27637L5.69824 7.72314L2.66602 14H1.91895L1.07666 6.0752L1.89697 6.06787L2.50488 12.1763ZM13.3374 7.41553C14.0991 6.40479 14.9976 5.90918 16.0327 5.92871C16.7944 5.94824 17.3486 6.21436 17.6953 6.72705C18.042 7.23975 18.1641 7.94531 18.0615 8.84375L17.1973 14H16.333L17.1973 8.8291C17.2266 8.55078 17.2314 8.28223 17.2119 8.02344C17.1289 7.1543 16.6553 6.70752 15.791 6.68311C15.2783 6.67334 14.7998 6.82715 14.3555 7.14453C13.9111 7.45703 13.5205 7.93066 13.1836 8.56543L12.2461 14H11.3818L13.3374 2.75H14.2017L13.3374 7.41553ZM24.3677 14C24.3433 13.8145 24.3359 13.6289 24.3457 13.4434L24.4116 12.894C24.0454 13.2896 23.6255 13.5996 23.1519 13.8242C22.6831 14.0488 22.1753 14.1562 21.6284 14.1465C20.9595 14.1367 20.415 13.9268 19.9951 13.5166C19.5801 13.1016 19.3945 12.5815 19.4385 11.9565C19.4775 11.4341 19.6558 10.9824 19.9731 10.6016C20.2954 10.2158 20.752 9.91797 21.3428 9.70801C21.9336 9.49316 22.5952 9.38574 23.3276 9.38574L24.9463 9.39307L25.0781 8.48486C25.1367 7.94287 25.0195 7.5083 24.7266 7.18115C24.4336 6.854 24.0015 6.68066 23.4302 6.66113C22.854 6.65137 22.3511 6.79541 21.9214 7.09326C21.4966 7.38623 21.2305 7.77441 21.123 8.25781H20.2661C20.3638 7.56445 20.7202 7.00049 21.3354 6.56592C21.9507 6.12646 22.6782 5.91162 23.5181 5.92139C24.3335 5.94092 24.9609 6.1875 25.4004 6.66113C25.8447 7.13477 26.0254 7.75 25.9424 8.50684L25.2832 12.4912L25.2246 13.1284C25.21 13.3921 25.2295 13.6533 25.2832 13.9121L25.2686 14H24.3677ZM21.7749 13.3774C22.312 13.397 22.8247 13.27 23.313 12.9966C23.8062 12.7183 24.2139 12.3252 24.5361 11.8174L24.8364 10.0669L23.4375 10.0596C22.5488 10.0596 21.8237 10.2183 21.2622 10.5356C20.7007 10.8481 20.3906 11.2974 20.332 11.8833C20.2881 12.313 20.4004 12.667 20.6689 12.9453C20.9424 13.2236 21.311 13.3677 21.7749 13.3774ZM30.3735 4.04639L30.022 6.0752H31.6113L31.4868 6.79297H29.8975L29.0186 12.0811L29.0039 12.5352C29.0039 13.0674 29.248 13.3408 29.7363 13.3555C29.8877 13.3604 30.1245 13.3433 30.4468 13.3042L30.4102 14.022C30.1221 14.105 29.8291 14.1416 29.5312 14.1318C29.0186 14.1221 28.645 13.9438 28.4106 13.5972C28.1763 13.2456 28.0908 12.7378 28.1543 12.0737L29.0259 6.79297H27.605L27.7368 6.0752H29.1431L29.502 4.04639H30.3735ZM33.3765 5.96533L32.8564 5.55518C33.374 4.94971 33.6963 4.3418 33.8232 3.73145L33.999 2.75H34.856L34.7241 3.58496C34.5728 4.54199 34.1235 5.33545 33.3765 5.96533ZM38.9062 11.9346C38.9844 11.2607 38.5742 10.7725 37.6758 10.4697L36.416 10.0962C35.2588 9.70557 34.7119 9.05371 34.7754 8.14062C34.8096 7.48145 35.1123 6.94678 35.6836 6.53662C36.2598 6.12158 36.9434 5.91895 37.7344 5.92871C38.5107 5.93848 39.1406 6.1582 39.624 6.58789C40.1074 7.0127 40.332 7.58154 40.2979 8.29443H39.4336C39.4629 7.8208 39.314 7.43506 38.9868 7.13721C38.6646 6.83936 38.2349 6.68555 37.6978 6.67578C37.1411 6.67578 36.6724 6.80762 36.2915 7.07129C35.9106 7.33008 35.6958 7.67432 35.647 8.104C35.5737 8.73389 35.9595 9.17578 36.8042 9.42969L37.7197 9.69336L38.2104 9.86182C39.314 10.2769 39.834 10.9531 39.7705 11.8906C39.7314 12.5254 39.4556 13.0479 38.9429 13.458C38.4351 13.8633 37.7783 14.0903 36.9727 14.1392L36.6724 14.1465C36.1401 14.1367 35.6592 14.0342 35.2295 13.8389C34.7998 13.6387 34.4702 13.3604 34.2407 13.0039C34.0112 12.6475 33.9111 12.2373 33.9404 11.7734L34.812 11.7808C34.812 12.2788 34.9805 12.6719 35.3174 12.96C35.6543 13.248 36.1182 13.397 36.709 13.4067C37.2949 13.4067 37.793 13.2749 38.2031 13.0112C38.6133 12.7427 38.8477 12.3838 38.9062 11.9346ZM45.1685 9.96436C45.2563 9.19775 45.4907 8.49707 45.8716 7.8623C46.2524 7.22266 46.7261 6.73682 47.2925 6.40479C47.8638 6.07275 48.4814 5.91406 49.1455 5.92871C49.7998 5.93848 50.3564 6.11914 50.8154 6.4707C51.2793 6.81738 51.6162 7.29346 51.8262 7.89893C52.041 8.49951 52.1143 9.16602 52.0459 9.89844L52.0312 10.0376C51.8848 11.2876 51.4404 12.291 50.6982 13.0479C49.9609 13.8047 49.0747 14.1709 48.0396 14.1465C47.1509 14.1318 46.4404 13.8047 45.9082 13.165C45.376 12.5254 45.1147 11.6807 45.1245 10.6309L45.1465 10.2134L45.1685 9.96436ZM46.0181 10.2134C45.9546 10.7944 45.9961 11.3315 46.1426 11.8247C46.2939 12.313 46.5332 12.6963 46.8604 12.9746C47.1875 13.2529 47.5952 13.3994 48.0835 13.4141C48.6108 13.4238 49.0918 13.2896 49.5264 13.0112C49.9658 12.7329 50.3271 12.3398 50.6104 11.832C50.8936 11.3242 51.0767 10.7627 51.1597 10.1475L51.1816 9.90576C51.2695 8.96338 51.123 8.19434 50.7422 7.59863C50.3662 6.99805 49.8193 6.69043 49.1016 6.67578C48.3203 6.65137 47.644 6.9541 47.0728 7.58398C46.5063 8.20898 46.1597 9.0415 46.0327 10.0815L46.0181 10.2134ZM55.4004 6.0752L55.1367 7.43018C55.4883 6.94189 55.8936 6.56836 56.3525 6.30957C56.8164 6.0459 57.312 5.91895 57.8394 5.92871C58.6011 5.94824 59.1553 6.21436 59.502 6.72705C59.8486 7.23975 59.9707 7.94531 59.8682 8.84375L59.0039 14H58.1396L59.0039 8.8291C59.0332 8.55078 59.0381 8.28223 59.0186 8.02344C58.9355 7.1543 58.4619 6.70752 57.5977 6.68311C57.085 6.67334 56.6064 6.82715 56.1621 7.14453C55.7178 7.45703 55.3271 7.93066 54.9902 8.56543L54.0527 14H53.1885L54.5654 6.0752H55.4004ZM67.9468 4.04639L67.5952 6.0752H69.1846L69.0601 6.79297H67.4707L66.5918 12.0811L66.5771 12.5352C66.5771 13.0674 66.8213 13.3408 67.3096 13.3555C67.4609 13.3604 67.6978 13.3433 68.02 13.3042L67.9834 14.022C67.6953 14.105 67.4023 14.1416 67.1045 14.1318C66.5918 14.1221 66.2183 13.9438 65.9839 13.5972C65.7495 13.2456 65.6641 12.7378 65.7275 12.0737L66.5991 6.79297H65.1782L65.3101 6.0752H66.7163L67.0752 4.04639H67.9468ZM71.5796 7.41553C72.3413 6.40479 73.2397 5.90918 74.2749 5.92871C75.0366 5.94824 75.5908 6.21436 75.9375 6.72705C76.2842 7.23975 76.4062 7.94531 76.3037 8.84375L75.4395 14H74.5752L75.4395 8.8291C75.4688 8.55078 75.4736 8.28223 75.4541 8.02344C75.3711 7.1543 74.8975 6.70752 74.0332 6.68311C73.5205 6.67334 73.042 6.82715 72.5977 7.14453C72.1533 7.45703 71.7627 7.93066 71.4258 8.56543L70.4883 14H69.624L71.5796 2.75H72.4438L71.5796 7.41553ZM80.8228 14.1465C80.188 14.1367 79.6387 13.9609 79.1748 13.6191C78.7109 13.2725 78.3691 12.8037 78.1494 12.2129C77.9346 11.6172 77.8589 10.9751 77.9224 10.2866L77.9443 10.0376C78.0127 9.30518 78.23 8.60938 78.5962 7.9502C78.9624 7.28613 79.4263 6.78076 79.9878 6.43408C80.5493 6.08252 81.1499 5.91406 81.7896 5.92871C82.3804 5.93848 82.8784 6.09961 83.2837 6.41211C83.6938 6.72461 83.9917 7.15918 84.1772 7.71582C84.3628 8.27246 84.4214 8.8877 84.353 9.56152L84.2944 10.0962H78.8086L78.7866 10.272C78.7134 10.8042 78.7524 11.3145 78.9038 11.8027C79.0552 12.2861 79.3018 12.6719 79.6436 12.96C79.9902 13.2432 80.4053 13.3896 80.8887 13.3994C81.3574 13.4141 81.7798 13.3237 82.1558 13.1284C82.5317 12.9331 82.8784 12.6719 83.1958 12.3447L83.7085 12.7622C83.3521 13.2212 82.9272 13.5703 82.4341 13.8096C81.9458 14.0439 81.4087 14.1562 80.8228 14.1465ZM81.7456 6.67578C81.1108 6.65137 80.542 6.87598 80.0391 7.34961C79.5361 7.82324 79.1577 8.48975 78.9038 9.34912L83.5034 9.35645L83.5254 9.24658C83.6133 8.55322 83.4912 7.95752 83.1592 7.45947C82.8271 6.95654 82.356 6.69531 81.7456 6.67578Z\" fill=\"#FF7B51\" />\r\n        <path d=\"M11.1084 27.1172L14.1675 45.1128L23.4473 27.1172H30.1123L25.7886 52H20.7642L21.9946 44.9077L24.4214 33.8335L14.8853 52H11.4502L8.11768 33.2012L6.51123 45.4546L5.36621 52H0.358887L4.68262 27.1172H11.1084ZM46.6895 41.2163H37.1533L35.9912 47.8813H47.2021L46.4844 52H30.2661L34.5898 27.1172H50.7739L50.0391 31.27H38.8794L37.8369 37.2002H47.4072L46.6895 41.2163ZM69.2139 52H64.3604L57.439 35.4058L54.5508 52H49.5435L53.8672 27.1172H58.7036L65.6421 43.7456L68.5303 27.1172H73.5205L69.2139 52ZM96.4038 27.1172L93.6011 43.5234C93.2137 46.2692 92.0744 48.4396 90.1831 50.0347C88.2918 51.6297 85.9448 52.4045 83.1421 52.3589C81.3875 52.3247 79.8608 51.943 78.562 51.2139C77.2746 50.4733 76.3232 49.4365 75.708 48.1035C75.0928 46.7591 74.882 45.2381 75.0757 43.5405L77.8613 27.1172H82.8687L80.083 43.5576C80.0033 44.1956 79.9976 44.7938 80.0659 45.3521C80.2938 47.1978 81.3932 48.1548 83.3643 48.2231C84.777 48.2687 85.9334 47.8813 86.8335 47.061C87.7336 46.2407 88.3146 45.0672 88.5767 43.5405L91.3794 27.1172H96.4038Z\" fill=\"#FF7B51\" />\r\n        <path d=\"M0 55.418H95.874V57.127H0V55.418Z\" fill=\"#FF7B51\" />\r\n      </svg>\r\n\r\n      {/* <h1 className=\"heading\"> What's on the menu </h1> */}\r\n      <section className=\"itemsContainer\">{itemsOnTheMenu}</section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MenuComponent;\r\n","import { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useTrail, animated } from \"react-spring\";\r\n\r\nconst config = { mass: 1, tension: 180, friction: 12 };\r\n\r\nexport const SingleButton = styled.button`\r\n  border: 0;\r\n  width: 4rem;\r\n  height: 4rem;\r\n  border-radius: 50%;\r\n  font-size: 1.8rem;\r\n  transition: all 0.3s ease;\r\n  background-color: #ffaf75;\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    filter: brightness(1.11);\r\n    transform: scale(1.15);\r\n  }\r\n`;\r\n\r\ninterface IButtons {\r\n  setNumberOfGuests: (n: number) => void;\r\n}\r\n\r\nconst Buttons = (props: IButtons) => {\r\n  const listOfButtons: JSX.Element[] = [];\r\n  const [lastPickedNumber, setLastPickedNumber] = useState<number>();\r\n\r\n  function addButtons(): void {\r\n    for (let i = 0; i < 12; i++) {\r\n      const numberPickedByGuest = i + 1;\r\n      listOfButtons.push(\r\n        <SingleButton\r\n          key={i}\r\n          className={lastPickedNumber === numberPickedByGuest ? \"selected\" : \"\"}\r\n          onClick={(e) => {\r\n            const chosenNumber = i + 1;\r\n            setLastPickedNumber(chosenNumber);\r\n\r\n            //update the parent state\r\n            props.setNumberOfGuests(i + 1);\r\n          }}\r\n        >\r\n          {i + 1}\r\n        </SingleButton>\r\n      );\r\n    }\r\n  }\r\n\r\n  addButtons();\r\n\r\n  const trail = useTrail(listOfButtons.length, {\r\n    config,\r\n    from: { opacity: 0, y: -4 },\r\n    to: { opacity: 1, y: 0 },\r\n  });\r\n\r\n  return (\r\n    <div className=\"bookings-page__buttons\">\r\n      {trail.map((styles, i) => {\r\n        return (\r\n          <animated.div style={styles} key={i}>\r\n            {listOfButtons[i]}\r\n          </animated.div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Buttons;\r\n","/**\r\n * @returns today's date in year-month-day\r\n */\r\n\r\nexport const getTodaysDate = () => {\r\n  const todaysDate = new Date();\r\n  return `${todaysDate.getFullYear()}-${\r\n    todaysDate.getMonth() + 1\r\n  }-${todaysDate.getDate()}`;\r\n};\r\n","import FullCalendar from \"@fullcalendar/react\";\r\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\r\nimport interactionPlugin from \"@fullcalendar/interaction\";\r\nimport { getTodaysDate } from \"../../../utils/getTodaysDate\";\r\nimport toast from \"react-hot-toast\";\r\n\r\ninterface CalanderProp {\r\n  change: (e: any) => void;\r\n}\r\n\r\nconst CalanderComponent = ({ change }: CalanderProp) => {\r\n  return (\r\n    <>\r\n      <FullCalendar\r\n        plugins={[dayGridPlugin, interactionPlugin]}\r\n        initialView=\"dayGridMonth\"\r\n        editable={true}\r\n        themeSystem={\"standard\"}\r\n        selectable={true}\r\n        handleWindowResize={true}\r\n        headerToolbar={{\r\n          start: \"title\",\r\n          center: \"\",\r\n          end: \"\",\r\n        }}\r\n        footerToolbar={{ left: \"\", center: \"\", right: \"prev,next\" }}\r\n        dateClick={(e) => {\r\n          //Controll that the date the user picked hasen't already passed\r\n          const todaysDate = new Date(getTodaysDate()).getTime();\r\n          const datePickedByGuest = new Date(e.dateStr).getTime();\r\n          if (todaysDate > datePickedByGuest) {\r\n            return toast.error(\"Day you picked has already passed\");\r\n          } else {\r\n            //Update parent state object\r\n            change(e.dateStr);\r\n          }\r\n        }}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CalanderComponent;\r\n","export default __webpack_public_path__ + \"static/media/taken.c03071c3.svg\";","import { useRef } from \"react\";\r\nimport { ISitting } from \"./../../../models/ISitting\";\r\nimport styled from \"styled-components\";\r\nimport taken from \"./../../../svgs/taken.svg\";\r\ninterface ISittingComponentInterface {\r\n  updateSitting?: (sittingTime: string) => void;\r\n  availableTables: ISitting;\r\n}\r\n\r\nconst SquareButton = styled.button`\r\n  border: 0;\r\n  min-width: 8rem;\r\n  width: 20%;\r\n  height: 10%;\r\n  border-radius: 3px;\r\n  font-size: 1.8rem;\r\n  transition: all 0.3s ease;\r\n  background-color: #ffaf75;\r\n\r\n  &:hover {\r\n    filter: brightness(1.11);\r\n    transform: scale(1.15);\r\n  }\r\n`;\r\n\r\nconst SittingsComponents = (props: ISittingComponentInterface) => {\r\n  const sectionRef = useRef(null);\r\n  const handleClick = (target: HTMLInputElement) => {\r\n    //remove the class \"selected\" from all elements\r\n    if (sectionRef.current) {\r\n      const children: HTMLCollection = sectionRef.current![\"children\"];\r\n      for (let i = 0; i < children.length; i++) {\r\n        const thisElementsClasses = (children[i] as HTMLElement).classList;\r\n        if (thisElementsClasses.contains(\"selected\")) {\r\n          thisElementsClasses.remove(\"selected\");\r\n        }\r\n      }\r\n    }\r\n\r\n    //add it to only the clicked element\r\n    target.classList.contains(\"selected\")\r\n      ? target.classList.remove(\"selected\")\r\n      : target.classList.add(\"selected\");\r\n    props.updateSitting!(target.id);\r\n  };\r\n\r\n  return (\r\n    <section className=\"bookings-page__sittings\">\r\n      <h5>Pick from the following available sittings:</h5>\r\n\r\n      <section className=\"bookings-page__sittings__inner\" ref={sectionRef}>\r\n        {props.availableTables.sitting18 && (\r\n          <SquareButton\r\n            id=\"18:00\"\r\n            onClick={(e) => handleClick(e.target as HTMLInputElement)}\r\n          >\r\n            18:00\r\n          </SquareButton>\r\n        )}\r\n        {props.availableTables.sitting21 && (\r\n          <SquareButton\r\n            id=\"21:00\"\r\n            onClick={(e) => handleClick(e.target as HTMLInputElement)}\r\n          >\r\n            21:00\r\n          </SquareButton>\r\n        )}\r\n        {!props.availableTables.sitting18 && !props.availableTables.sitting21 && (\r\n          <div className=\"no-tables\">\r\n            <img src={taken} alt=\"Aliens taking all the availability\" />\r\n            <p>\r\n              Opps, looks like there isn't any availability on the selected\r\n              dates\r\n            </p>\r\n            <p>Please go back and select some other date 😄</p>\r\n          </div>\r\n        )}\r\n      </section>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default SittingsComponents;\r\n","/**\r\n *\r\n * @param numOfGuests number of guests in the reservation\r\n * @returns either 1 or 2, which represents the number of tables in the reservation\r\n */\r\n\r\nexport function countNumberOfTables(numOfGuests: number) {\r\n  return numOfGuests <= 6 ? 1 : 2;\r\n}\r\n","import { DocumentData } from \"@firebase/firestore-types\";\r\nimport { Data } from \"react-firebase-hooks/firestore/dist/firestore/types\";\r\n\r\ninterface ICheckAvailability {\r\n  (\r\n    firestoreSnapshop: Data<DocumentData, \"\", \"\">[],\r\n    dateFromClientBooking: string\r\n  ): [\r\n    numberOfBookedTables18: number | null,\r\n    numberOfBookedTables21: number | null,\r\n    error: string | null\r\n  ];\r\n}\r\n\r\n/**\r\n *\r\n * @param firestoreSnapshop  The database object that we can loop through and determain avilability\r\n * @param dateFromClientBooking The date that the user/admin wishes to make a reservation on\r\n * @returns number of booked tables for the 18:00 sittings + number of booked tables for the 21:00 sitting as an array\r\n */\r\n\r\nexport const checkAvailability: ICheckAvailability = (\r\n  firestoreSnapshop,\r\n  dateFromClientBooking\r\n) => {\r\n  if (!dateFromClientBooking) {\r\n    const errorMessage = \"Please choose a date for your reservation\";\r\n    return [null, null, errorMessage];\r\n  }\r\n  let numberOfBookedTables18 = 0;\r\n  let numberOfBookedTables21 = 0;\r\n\r\n  firestoreSnapshop.forEach((bookingInDB: Data) => {\r\n    if (dateFromClientBooking === bookingInDB.date) {\r\n      bookingInDB.sitting === \"18:00\"\r\n        ? (numberOfBookedTables18 += bookingInDB.numberOfTables)\r\n        : (numberOfBookedTables21 += bookingInDB.numberOfTables);\r\n    }\r\n  });\r\n  return [numberOfBookedTables18, numberOfBookedTables21, null];\r\n};\r\n","import { IBookingState } from '../models/IBookingState';\r\n\r\n/**\r\n *\r\n * @param stateSetterFn : state setter function\r\n * @param newProp : the object property we want to update, can also be an object with multiple properties\r\n */\r\n\r\nexport const updateComplexBookingObject = (\r\n  stateSetterFn: React.Dispatch<React.SetStateAction<IBookingState>>,\r\n  newProp: IBookingState\r\n) => {\r\n  stateSetterFn((prevState) => {\r\n    return {\r\n      ...prevState,\r\n      ...newProp,\r\n    };\r\n  });\r\n};","/**\r\n * Takes an element reference and scrolls that element into view\r\n * @param element : element reference returned from the useRef hook\r\n */\r\n\r\nexport const scrollToElement = (element: React.MutableRefObject<null>) => {\r\n  if (element.current) {\r\n    (element.current! as HTMLElement).scrollIntoView({ behavior: \"smooth\" });\r\n  }\r\n};\r\n","import firebase from \"firebase\";\r\n// import \"firebase/firestore\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyDo9uPM_CSBtGhf8ZwVF22QtPChlKbMSNg\",\r\n  authDomain: \"restaurant-dcf8d.firebaseapp.com\",\r\n  projectId: \"restaurant-dcf8d\",\r\n  storageBucket: \"restaurant-dcf8d.appspot.com\",\r\n  messagingSenderId: \"987760687525\",\r\n  appId: \"1:987760687525:web:57b8d4acdd84d37c29504c\",\r\n  measurementId: \"G-941CQ1P31R\",\r\n};\r\n\r\n//prevent error when reloading - only useful in development\r\nif (!firebase.apps.length) {\r\n  firebase.initializeApp(firebaseConfig);\r\n} else {\r\n  firebase.app();\r\n}\r\n\r\nexport const db = firebase.firestore()\r\n","import { IGuestInfoComponent } from \"./../../../models/IGuestInfoComponent\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport { IFormInterface } from \"./../../../models/IFormInterface\";\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\n\r\nexport function GuestInfoComponent(props: IGuestInfoComponent) {\r\n  const { control, handleSubmit } = useForm();\r\n  const { updateInformation } = props;\r\n\r\n  const formSubmitionHandler = (data: IFormInterface) => {\r\n    if (data) updateInformation(data);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h5>Please fill out the following information</h5>\r\n      <form onSubmit={handleSubmit(formSubmitionHandler)}>\r\n        <div className=\"form__input-fields\">\r\n          <Controller\r\n            name=\"firstName\"\r\n            rules={{\r\n              required: true,\r\n              min: 2,\r\n              max: 15,\r\n            }}\r\n            control={control}\r\n            render={({ field: { onChange }, fieldState: { invalid } }) => (\r\n              <TextField\r\n                required\r\n                type=\"text\"\r\n                onChange={onChange}\r\n                label=\"First Name\"\r\n                variant=\"outlined\"\r\n                error={invalid}\r\n                fullWidth\r\n                helperText={\r\n                  invalid && \"First name must be between 2-15 characters long\"\r\n                }\r\n              />\r\n            )}\r\n          />\r\n          <Controller\r\n            name=\"lastName\"\r\n            rules={{\r\n              required: true,\r\n              min: 2,\r\n              max: 15,\r\n            }}\r\n            control={control}\r\n            render={({ field: { onChange }, fieldState: { invalid } }) => (\r\n              <TextField\r\n                required\r\n                name=\"lastName\"\r\n                label=\"Last Name\"\r\n                variant=\"outlined\"\r\n                onChange={onChange}\r\n                error={invalid}\r\n                fullWidth\r\n                helperText={\r\n                  invalid && \"Last name must be between 2-15 characters long\"\r\n                }\r\n              />\r\n            )}\r\n          />\r\n          <Controller\r\n            name=\"email\"\r\n            rules={{\r\n              required: true,\r\n              pattern: /[^@ \\t\\r\\n]+@[^@ \\t\\r\\n]+\\.[^@ \\t\\r\\n]+/,\r\n            }}\r\n            control={control}\r\n            render={({\r\n              field: { onChange },\r\n              fieldState: { invalid, error },\r\n            }) => (\r\n              <TextField\r\n                label=\"Email\"\r\n                variant=\"outlined\"\r\n                onChange={onChange}\r\n                error={invalid}\r\n                fullWidth\r\n                helperText={invalid && \"Please enter a valid email adress\"}\r\n              />\r\n            )}\r\n          />\r\n          <Controller\r\n            name=\"number\"\r\n            control={control}\r\n            rules={{\r\n              required: true,\r\n              pattern:\r\n                // eslint-disable-next-line no-useless-escape\r\n                /^[\\+]?[(]?[0-9]{3}[)]?[-\\s\\.]?[0-9]{3}[-\\s\\.]?[0-9]{4,6}$/,\r\n            }}\r\n            render={({ field: { onChange }, fieldState: { invalid } }) => (\r\n              <TextField\r\n                required\r\n                name=\"number\"\r\n                label=\"Phone Number\"\r\n                variant=\"outlined\"\r\n                error={invalid}\r\n                fullWidth\r\n                helperText={invalid && \"Please enter a valid phone number\"}\r\n                onChange={onChange}\r\n              />\r\n            )}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"form-submit\">\r\n          <Controller\r\n            name=\"acceptedGDPR\"\r\n            control={control}\r\n            rules={{ required: true }}\r\n            render={({ field: { onChange }, fieldState: { invalid } }) => (\r\n              <FormControl error={invalid}>\r\n                <FormControlLabel\r\n                  control={<Checkbox onChange={onChange} color=\"primary\" />}\r\n                  label={\r\n                    <p>\r\n                      I have read and agree to the terms of{\" \"}\r\n                      <a href=\"https://www.riksdagen.se/sv/dokument-lagar/dokument/svensk-forfattningssamling/lag-2018218-med-kompletterande-bestammelser_sfs-2018-218\">\r\n                        GDPR\r\n                      </a>\r\n                      .\r\n                    </p>\r\n                  }\r\n                />\r\n\r\n                <FormHelperText>\r\n                  {invalid && \"Please check this box to continue\"}\r\n                </FormHelperText>\r\n              </FormControl>\r\n            )}\r\n          />\r\n          <Button type=\"submit\" variant=\"contained\">\r\n            Make reservation\r\n          </Button>\r\n        </div>\r\n      </form>\r\n    </>\r\n  );\r\n}\r\n","export interface IBookingState {\r\n  [x: string]: any;\r\n  numberOfGuests?: number | null;\r\n  date?: string | null;\r\n  sitting?: string | null;\r\n  numberOfTables?: number | null;\r\n  firstName?: string | null;\r\n  lastName?: string | null;\r\n  email?: string | null;\r\n  number?: string | null;\r\n  acceptedGDPR?: boolean | null;\r\n  bookingReference?: string | null;\r\n}\r\n\r\nexport const initialBookingState: IBookingState = {\r\n  numberOfGuests: null,\r\n  date: null,\r\n  sitting: null,\r\n  numberOfTables: null,\r\n  firstName: null,\r\n  lastName: null,\r\n  email: null,\r\n  number: null,\r\n  acceptedGDPR: null,\r\n  bookingReference: null,\r\n};\r\n","import emailjs from \"emailjs-com\";\r\nimport { ISendEmail } from \"../models/ISendEmail\";\r\nimport { IBookingState } from \"../models/IBookingState\";\r\n\r\nexport const sendEmailConfirmation = (stateObject: IBookingState) => {\r\n  // takes the variabels from emailJs and giives them the value of the form of the user.\r\n  const emailSendOutCredentials: ISendEmail = {\r\n    first_name: stateObject.firstName!,\r\n    last_name: stateObject.lastName!,\r\n    booked_date: stateObject.date!,\r\n    booked_time: stateObject.sitting!,\r\n    user_email: stateObject.email!,\r\n    booking_reference: stateObject.bookingReference!,\r\n  };\r\n  // This is where the email action happens, a replica of their code on the ddocumentation with our variables\r\n  emailjs\r\n    .send(\r\n      \"service_z6xxeoc\",\r\n      \"template_32mibab\",\r\n      emailSendOutCredentials,\r\n      \"user_WFe2FaWw3TmyNA4ufQBU3\"\r\n    )\r\n    .then(\r\n      (result) => {\r\n        console.log(\"SUCCESS!\", result.status, result.text);\r\n      },\r\n      (error) => {\r\n        console.log(\"FAILED...\", error.status, error.text);\r\n        alert(\"Something went wrong with the email sendout\");\r\n      }\r\n    );\r\n};\r\nexport const sendEmailCancellation = (dataObject: IBookingState) => {\r\n  // takes the variabels from emailJs and giives them the value of the form of the user.\r\n  const emailSendOutCredentials: ISendEmail = {\r\n    first_name: dataObject.firstName!,\r\n    last_name: dataObject.lastName!,\r\n    booked_date: dataObject.date!,\r\n    booked_time: dataObject.sitting!,\r\n    user_email: dataObject.email!,\r\n    booking_reference: dataObject.bookingReference!,\r\n  };\r\n  // This is where the email action happens, a replica of their code on the ddocumentation with our variables\r\n  emailjs\r\n    .send(\r\n      \"service_z6xxeoc\",\r\n      \"template_h8rs4n5\",\r\n      emailSendOutCredentials,\r\n      \"user_WFe2FaWw3TmyNA4ufQBU3\"\r\n    )\r\n    .then(\r\n      (result) => {\r\n        console.log(\"SUCCESS!\", result.status, result.text);\r\n      },\r\n      (error) => {\r\n        console.log(\"FAILED...\", error.status, error.text);\r\n        alert(\"Something went wrong with the email sendout\");\r\n      }\r\n    );\r\n};\r\n","import \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport styled from \"styled-components\";\r\n\r\nconst SpinnerContainer = styled.div`\r\n  height: 100vh;\r\n  width: 100vw;\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  z-index: 100;\r\n`;\r\n\r\ninterface ISpinner {\r\n  visible: boolean;\r\n}\r\n\r\nexport default function Spinner({ visible }: ISpinner) {\r\n  if (visible) {\r\n    return (\r\n      <SpinnerContainer>\r\n        <Loader type=\"BallTriangle\" color=\"#ff7b51\" height={115} width={115} />\r\n      </SpinnerContainer>\r\n    );\r\n  } else {\r\n    return null;\r\n  }\r\n}\r\n\r\n//for debug purposes\r\nSpinner.defaultProps = {\r\n  visible: true,\r\n};\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { FC, useEffect, useState, useRef } from \"react\";\r\nimport randomstring from \"randomstring\";\r\n\r\n//child components\r\nimport Buttons from \"./ChildComponents/Buttons\";\r\nimport CalanderComponent from \"./ChildComponents/CalanderComponent\";\r\nimport SittingsComponents from \"./ChildComponents/SittingsComponents\";\r\n\r\n//utils\r\nimport { countNumberOfTables } from \"./../../utils/countNumOfTables\";\r\nimport { checkAvailability } from \"./../../utils/checkAvailability\";\r\nimport { updateComplexBookingObject } from \"../../utils/updateComplexBookingObject\";\r\nimport { scrollToElement } from \"../../utils/scrollToElement\";\r\nimport { useSpring, animated } from \"react-spring\";\r\nimport { Toaster } from \"react-hot-toast\";\r\n\r\n//DB\r\nimport { useCollectionData } from \"react-firebase-hooks/firestore\";\r\nimport { db } from \"../../firebase\";\r\n\r\n//interfaces\r\nimport { ISitting } from \"./../../models/ISitting\";\r\nimport { GuestInfoComponent } from \"./ChildComponents/GuestInfoComponent\";\r\nimport { IFormInterface } from \"./../../models/IFormInterface\";\r\nimport {\r\n  IBookingState,\r\n  initialBookingState,\r\n} from \"./../../models/IBookingState\";\r\nimport { sendEmailConfirmation } from \"../../utils/emailSendOut\";\r\nimport Spinner from \"./ChildComponents/Spinner\";\r\nimport { useHistory } from \"react-router\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n//Parent component\r\nconst BookingsComponent: FC = () => {\r\n  const bookingsCollectionRef = db.collection(\"bookings\");\r\n  const [snapshot, error] = useCollectionData(bookingsCollectionRef, {\r\n    idField: \"id\",\r\n  });\r\n\r\n  const headerFadeIn = useSpring({\r\n    from: { scale: 2, opacity: 0, y: -30 },\r\n    to: { scale: 1, opacity: 1, y: 0 },\r\n    config: {\r\n      duration: 600,\r\n    },\r\n  });\r\n\r\n  /** Booking properties saved in state */\r\n  const [bookingState, setBookingState] =\r\n    useState<IBookingState>(initialBookingState);\r\n\r\n  /** State for every individual child component - when true, the emelent will be scrolled into view with help from the scrollToElement fn */\r\n  const [numberOfGuestsPicked, setNumberOfGuestsPicked] =\r\n    useState<boolean>(false);\r\n  const [datePicked, setDatePicked] = useState<boolean>(false);\r\n  const [sittingPicked, setSittingPicked] = useState<boolean>(false);\r\n  const [loading, setLoading] = useState<boolean>(false);\r\n\r\n  /** State for the entire booking object - when true, the booking will be submittible to cloud firestore */\r\n  const [bookingAllowed, setBookingAllowed] = useState<boolean>(false);\r\n\r\n  /** Reference to each child compoent */\r\n  const calanderRef = useRef(null);\r\n  const sittingRef = useRef(null);\r\n  const guestInfoRef = useRef(null);\r\n\r\n  const updateNumberOfGuests = (numberOfGuests: number) => {\r\n    const numberOfGuestsObj = {\r\n      numberOfGuests,\r\n      numberOfTables: countNumberOfTables(numberOfGuests),\r\n    };\r\n    updateComplexBookingObject(setBookingState, numberOfGuestsObj);\r\n    setNumberOfGuestsPicked(true);\r\n  };\r\n\r\n  /** useEffects that will be used to scroll into the next part of the booking process */\r\n  useEffect(() => {\r\n    scrollToElement(calanderRef);\r\n  }, [numberOfGuestsPicked]);\r\n\r\n  //controlling the calander settings\r\n  const updateDate = (date: string) => {\r\n    if (datePicked) {\r\n      //Runs if the user has already chosen a date but changes their mind, this will update the availability for the new date\r\n      //and re-render the SittingsComponent\r\n      const [numberOfBookedTables18, numberOfBookedTables21] =\r\n        checkAvailability(snapshot!, date!);\r\n\r\n      setSittingAvailability({\r\n        sitting18: numberOfBookedTables18! < 15,\r\n        sitting21: numberOfBookedTables21! < 15,\r\n      });\r\n    }\r\n\r\n    updateComplexBookingObject(setBookingState, { date });\r\n    setDatePicked(true);\r\n  };\r\n\r\n  const updateSitting = (sitting: string) => {\r\n    updateComplexBookingObject(setBookingState, { sitting });\r\n    setSittingPicked(true);\r\n  };\r\n  useEffect(() => {\r\n    scrollToElement(guestInfoRef);\r\n  }, [sittingPicked]);\r\n\r\n  const [sittingAvailability, setSittingAvailability] = useState<ISitting>({\r\n    sitting18: false,\r\n    sitting21: false,\r\n  });\r\n\r\n  const updateUserInformation = (userInfomation: IFormInterface) => {\r\n    const userInfoObj = {\r\n      ...userInfomation,\r\n      bookingReference: randomstring.generate(18),\r\n    };\r\n    updateComplexBookingObject(setBookingState, userInfoObj);\r\n    setBookingAllowed(!bookingAllowed);\r\n    setLoading(true);\r\n  };\r\n  let history = useHistory();\r\n\r\n  //triggered when the user info form is submitted\r\n  useEffect(() => {\r\n    //check that all of bookingState's properties are truthies\r\n    let isBookingPossible = Object.values(bookingState).every(Boolean);\r\n    if (isBookingPossible) {\r\n      bookingsCollectionRef.add(bookingState).then((res) => {\r\n        if (res) {\r\n          sendEmailConfirmation(bookingState);\r\n          history.push(\"/confirmation\");\r\n        } else {\r\n          alert(\"Your booking did not go trough, please try again later\");\r\n          history.push(\"/bookings\");\r\n        }\r\n      });\r\n    }\r\n  }, [bookingAllowed]);\r\n\r\n  useEffect(() => {\r\n    scrollToElement(sittingRef);\r\n\r\n    if (snapshot && !error) {\r\n      const { date } = bookingState;\r\n      const [numberOfBookedTables18, numberOfBookedTables21] =\r\n        checkAvailability(snapshot, date!);\r\n\r\n      setSittingAvailability({\r\n        //following statements will be evaluated as a boolean\r\n        sitting18: numberOfBookedTables18! < 15,\r\n        sitting21: numberOfBookedTables21! < 15,\r\n      });\r\n    }\r\n  }, [datePicked]);\r\n\r\n  return (\r\n    <>\r\n      <Toaster position=\"top-center\" reverseOrder={false} />\r\n      <Spinner visible={loading} />\r\n      <main className=\"bookings-page\">\r\n        <section className=\"bookings-page__number-of-people\">\r\n          <Link to=\"/\">\r\n            <animated.div className=\"header\" style={headerFadeIn}>\r\n              <svg width=\"163\" height=\"63\" viewBox=\"0 0 163 63\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                <path d=\"M0.358887 49L4.68262 24.1172L12.4414 24.1343C15.3239 24.1457 17.4886 24.7324 18.9355 25.8945C20.3825 27.0566 21.0376 28.6916 20.9009 30.7993C20.7414 33.3172 19.2887 35.1572 16.543 36.3193C17.5342 36.6611 18.3032 37.3049 18.8501 38.2505C19.397 39.1847 19.6305 40.2899 19.5508 41.5659C19.3913 43.9129 18.4684 45.7415 16.7822 47.0518C15.1074 48.3506 12.8174 49 9.91211 49H0.358887ZM7.26318 38.165L6.08398 44.8813L10.0317 44.8984C11.2622 44.8984 12.2933 44.5965 13.125 43.9927C13.9567 43.3774 14.4523 42.5514 14.6118 41.5146C14.7713 40.4893 14.6289 39.6917 14.1846 39.1221C13.7516 38.541 13.0168 38.2277 11.98 38.1821L7.26318 38.165ZM7.87842 34.542L11.2793 34.5762C12.5439 34.5534 13.575 34.2572 14.3726 33.6875C15.1815 33.1178 15.6657 32.326 15.8252 31.312C16.11 29.3068 15.0562 28.2985 12.6636 28.2871L8.97217 28.27L7.87842 34.542ZM32.1973 49.3418C30.5452 49.3076 29.0869 48.9202 27.8223 48.1797C26.569 47.4277 25.5721 46.3511 24.8315 44.9497C24.1024 43.5369 23.6808 41.9191 23.5669 40.0962C23.4416 38.2277 23.641 36.2339 24.165 34.1147C24.6891 31.9956 25.5322 30.1328 26.6943 28.5264C27.8564 26.9199 29.2179 25.7179 30.7788 24.9204C32.3511 24.1229 34.0487 23.7412 35.8716 23.7754C37.5464 23.8096 39.0104 24.2083 40.2637 24.9717C41.5169 25.7236 42.5024 26.8117 43.2202 28.2358C43.938 29.6486 44.3481 31.255 44.4507 33.0552C44.5646 35.0604 44.3481 37.1226 43.8013 39.2417C43.2544 41.3608 42.4056 43.1951 41.2549 44.7446C40.1042 46.2941 38.7541 47.4562 37.2046 48.231C35.6665 49.0057 33.9974 49.376 32.1973 49.3418ZM39.2896 35.875L39.4263 34.2515C39.5402 32.2235 39.2668 30.6854 38.606 29.6372C37.9565 28.589 36.9653 28.0422 35.6323 27.9966C33.5474 27.9282 31.8896 28.8511 30.6592 30.7651C29.4401 32.6792 28.7508 35.3566 28.5913 38.7974C28.4774 40.814 28.7451 42.3691 29.3945 43.4629C30.0439 44.5452 31.0522 45.1092 32.4194 45.1548C34.2082 45.2345 35.6893 44.5396 36.8628 43.0698C38.0363 41.5887 38.8053 39.498 39.1699 36.7979L39.2896 35.875ZM55.8154 49.3418C54.1634 49.3076 52.7051 48.9202 51.4404 48.1797C50.1872 47.4277 49.1903 46.3511 48.4497 44.9497C47.7205 43.5369 47.299 41.9191 47.1851 40.0962C47.0597 38.2277 47.2591 36.2339 47.7832 34.1147C48.3073 31.9956 49.1504 30.1328 50.3125 28.5264C51.4746 26.9199 52.8361 25.7179 54.397 24.9204C55.9692 24.1229 57.6668 23.7412 59.4897 23.7754C61.1646 23.8096 62.6286 24.2083 63.8818 24.9717C65.1351 25.7236 66.1206 26.8117 66.8384 28.2358C67.5562 29.6486 67.9663 31.255 68.0688 33.0552C68.1828 35.0604 67.9663 37.1226 67.4194 39.2417C66.8726 41.3608 66.0238 43.1951 64.873 44.7446C63.7223 46.2941 62.3722 47.4562 60.8228 48.231C59.2847 49.0057 57.6156 49.376 55.8154 49.3418ZM62.9077 35.875L63.0444 34.2515C63.1584 32.2235 62.8849 30.6854 62.2241 29.6372C61.5747 28.589 60.5835 28.0422 59.2505 27.9966C57.1655 27.9282 55.5078 28.8511 54.2773 30.7651C53.0583 32.6792 52.369 35.3566 52.2095 38.7974C52.0955 40.814 52.3633 42.3691 53.0127 43.4629C53.6621 44.5452 54.6704 45.1092 56.0376 45.1548C57.8263 45.2345 59.3075 44.5396 60.481 43.0698C61.6545 41.5887 62.4235 39.498 62.7881 36.7979L62.9077 35.875ZM78.9209 39.0708L75.6396 42.1128L74.4434 49H69.436L73.7598 24.1172H78.7671L76.853 35.0889L79.3994 32.2178L86.8848 24.1172H93.4131L82.6636 35.4307L89.0723 49H83.3643L78.9209 39.0708ZM96.5063 49H91.499L95.8057 24.1172H100.813L96.5063 49ZM120.928 49H116.074L109.153 32.4058L106.265 49H101.257L105.581 24.1172H110.417L117.356 40.7456L120.244 24.1172H125.234L120.928 49ZM145.366 45.8555C144.478 46.9834 143.173 47.855 141.453 48.4702C139.744 49.0741 137.812 49.3589 135.659 49.3247C133.962 49.3133 132.469 48.943 131.182 48.2139C129.894 47.4733 128.88 46.4137 128.14 45.0352C127.399 43.6566 126.978 42.0843 126.875 40.3184C126.761 38.6777 126.932 36.7523 127.388 34.542C127.855 32.3203 128.647 30.3778 129.763 28.7144C130.891 27.0396 132.241 25.792 133.813 24.9717C135.386 24.14 137.129 23.7412 139.043 23.7754C141.641 23.821 143.674 24.5558 145.144 25.98C146.614 27.3927 147.451 29.4207 147.656 32.064L142.837 32.0469C142.712 30.6569 142.341 29.6315 141.726 28.9707C141.111 28.3099 140.194 27.9567 138.975 27.9111C136.867 27.8428 135.203 28.7713 133.984 30.6968C132.777 32.6108 132.087 35.3908 131.917 39.0366C131.803 40.9849 132.099 42.4945 132.805 43.5654C133.523 44.6364 134.611 45.1833 136.069 45.2061C137.767 45.2516 139.214 44.8472 140.41 43.9927L141.248 39.7031H136.702L137.368 35.9263H146.87L145.366 45.8555Z\" fill=\"#FF7B51\" />\r\n                <path d=\"M0 52.418H148.357V54.127H0V52.418Z\" fill=\"#FF7B51\" />\r\n                <path d=\"M8.34961 4.43359L8.01758 6.15234C8.9681 4.85026 10.1628 4.21224 11.6016 4.23828C12.3438 4.2513 12.959 4.43685 13.4473 4.79492C13.9421 5.15299 14.248 5.65104 14.3652 6.28906C14.847 5.63151 15.4069 5.1237 16.0449 4.76562C16.6895 4.40104 17.3893 4.22526 18.1445 4.23828C19.1471 4.25781 19.8893 4.58984 20.3711 5.23438C20.8594 5.8724 21.0612 6.75781 20.9766 7.89062L20.957 8.11523L19.7949 15H18.6328L19.7852 8.0957C19.8242 7.71159 19.8275 7.34701 19.7949 7.00195C19.6647 5.84961 19.0072 5.26367 17.8223 5.24414C17.028 5.23112 16.2956 5.49154 15.625 6.02539C14.9609 6.55273 14.5443 7.21354 14.375 8.00781L13.1641 15H12.002L13.1738 8.00781C13.3626 6.21094 12.7018 5.28971 11.1914 5.24414C10.4427 5.23112 9.74609 5.46549 9.10156 5.94727C8.45703 6.42904 8.02409 7.02799 7.80273 7.74414L6.55273 15H5.39062L7.22656 4.43359H8.34961ZM29.3262 15C29.2936 14.7526 29.2839 14.5052 29.2969 14.2578L29.3848 13.5254C28.8965 14.0527 28.3366 14.4661 27.7051 14.7656C27.0801 15.0651 26.403 15.2083 25.6738 15.1953C24.7819 15.1823 24.056 14.9023 23.4961 14.3555C22.9427 13.8021 22.6953 13.1087 22.7539 12.2754C22.806 11.5788 23.0436 10.9766 23.4668 10.4688C23.8965 9.95443 24.5052 9.55729 25.293 9.27734C26.0807 8.99089 26.9629 8.84766 27.9395 8.84766L30.0977 8.85742L30.2734 7.64648C30.3516 6.92383 30.1953 6.3444 29.8047 5.9082C29.4141 5.47201 28.8379 5.24089 28.0762 5.21484C27.3079 5.20182 26.6374 5.39388 26.0645 5.79102C25.498 6.18164 25.1432 6.69922 25 7.34375H23.8574C23.9876 6.41927 24.4629 5.66732 25.2832 5.08789C26.1035 4.50195 27.0736 4.21549 28.1934 4.22852C29.2806 4.25456 30.1172 4.58333 30.7031 5.21484C31.2956 5.84635 31.5365 6.66667 31.4258 7.67578L30.5469 12.9883L30.4688 13.8379C30.4492 14.1895 30.4753 14.5378 30.5469 14.8828L30.5273 15H29.3262ZM25.8691 14.1699C26.5853 14.196 27.2689 14.0267 27.9199 13.6621C28.5775 13.291 29.1211 12.7669 29.5508 12.0898L29.9512 9.75586L28.0859 9.74609C26.901 9.74609 25.9342 9.95768 25.1855 10.3809C24.4368 10.7975 24.0234 11.3965 23.9453 12.1777C23.8867 12.7507 24.0365 13.2227 24.3945 13.5938C24.7591 13.9648 25.2507 14.1569 25.8691 14.1699ZM36.6602 9.69727L35.0977 11.0156L34.4043 15H33.2422L35.8496 0H37.0117L35.3516 9.51172L36.5625 8.39844L41.1621 4.43359H42.7148L37.5195 8.93555L41.1621 15H39.873L36.6602 9.69727ZM46.8457 15.1953C45.9993 15.1823 45.2669 14.9479 44.6484 14.4922C44.0299 14.0299 43.5742 13.4049 43.2812 12.6172C42.9948 11.8229 42.8939 10.9668 42.9785 10.0488L43.0078 9.7168C43.099 8.74023 43.3887 7.8125 43.877 6.93359C44.3652 6.04818 44.9837 5.37435 45.7324 4.91211C46.4811 4.44336 47.2819 4.21875 48.1348 4.23828C48.9225 4.2513 49.5866 4.46615 50.127 4.88281C50.6738 5.29948 51.071 5.87891 51.3184 6.62109C51.5658 7.36328 51.6439 8.18359 51.5527 9.08203L51.4746 9.79492H44.1602L44.1309 10.0293C44.0332 10.7389 44.0853 11.4193 44.2871 12.0703C44.4889 12.7148 44.8177 13.2292 45.2734 13.6133C45.7357 13.9909 46.2891 14.1862 46.9336 14.1992C47.5586 14.2188 48.1217 14.0983 48.623 13.8379C49.1243 13.5775 49.5866 13.2292 50.0098 12.793L50.6934 13.3496C50.2181 13.9616 49.6517 14.4271 48.9941 14.7461C48.3431 15.0586 47.627 15.2083 46.8457 15.1953ZM48.0762 5.23438C47.2298 5.20182 46.4714 5.5013 45.8008 6.13281C45.1302 6.76432 44.6257 7.65299 44.2871 8.79883L50.4199 8.80859L50.4492 8.66211C50.5664 7.73763 50.4036 6.94336 49.9609 6.2793C49.5182 5.60872 48.89 5.26042 48.0762 5.23438ZM64.1699 15C64.1374 14.7526 64.1276 14.5052 64.1406 14.2578L64.2285 13.5254C63.7402 14.0527 63.1803 14.4661 62.5488 14.7656C61.9238 15.0651 61.2467 15.2083 60.5176 15.1953C59.6257 15.1823 58.8997 14.9023 58.3398 14.3555C57.7865 13.8021 57.5391 13.1087 57.5977 12.2754C57.6497 11.5788 57.8874 10.9766 58.3105 10.4688C58.7402 9.95443 59.349 9.55729 60.1367 9.27734C60.9245 8.99089 61.8066 8.84766 62.7832 8.84766L64.9414 8.85742L65.1172 7.64648C65.1953 6.92383 65.0391 6.3444 64.6484 5.9082C64.2578 5.47201 63.6816 5.24089 62.9199 5.21484C62.1517 5.20182 61.4811 5.39388 60.9082 5.79102C60.3418 6.18164 59.987 6.69922 59.8438 7.34375H58.7012C58.8314 6.41927 59.3066 5.66732 60.127 5.08789C60.9473 4.50195 61.9173 4.21549 63.0371 4.22852C64.1243 4.25456 64.9609 4.58333 65.5469 5.21484C66.1393 5.84635 66.3802 6.66667 66.2695 7.67578L65.3906 12.9883L65.3125 13.8379C65.293 14.1895 65.319 14.5378 65.3906 14.8828L65.3711 15H64.1699ZM60.7129 14.1699C61.429 14.196 62.1126 14.0267 62.7637 13.6621C63.4212 13.291 63.9648 12.7669 64.3945 12.0898L64.7949 9.75586L62.9297 9.74609C61.7448 9.74609 60.778 9.95768 60.0293 10.3809C59.2806 10.7975 58.8672 11.3965 58.7891 12.1777C58.7305 12.7507 58.8802 13.2227 59.2383 13.5938C59.6029 13.9648 60.0944 14.1569 60.7129 14.1699Z\" fill=\"#FF7B51\" />\r\n              </svg>\r\n            </animated.div>\r\n          </Link>\r\n          <div className=\"center\">\r\n            <h5>How many guests are there in your party?</h5>\r\n            <Buttons setNumberOfGuests={updateNumberOfGuests} />\r\n          </div>\r\n        </section>\r\n        {numberOfGuestsPicked && (\r\n          <section\r\n            data-testid=\"calander-component\"\r\n            className=\"bookings-page__calander-container\"\r\n            ref={calanderRef}\r\n          >\r\n            <h5>Sounds great! What date do you wish to visit us?</h5>\r\n            <CalanderComponent change={updateDate} />\r\n          </section>\r\n        )}\r\n        {datePicked && numberOfGuestsPicked && (\r\n          <section\r\n            data-testid=\"sittings-component\"\r\n            ref={sittingRef}\r\n            className={\"bookings-page__sittings-container\"}\r\n          >\r\n            <SittingsComponents\r\n              updateSitting={updateSitting}\r\n              availableTables={sittingAvailability}\r\n            />\r\n          </section>\r\n        )}\r\n        {datePicked && numberOfGuestsPicked && sittingPicked && (\r\n          <section\r\n            className=\"bookings-page__guest-information\"\r\n            ref={guestInfoRef}\r\n          >\r\n            <GuestInfoComponent updateInformation={updateUserInformation} />\r\n          </section>\r\n        )}\r\n      </main>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BookingsComponent;\r\n","function PageNotfound() {\r\n  return (\r\n    <div>\r\n      <h1>Oups... Something went wrong, Page Not Found</h1>\r\n    </div>\r\n  );\r\n}\r\nexport default PageNotfound;\r\n","const GoogleMap = () => {\r\n  return (\r\n    <iframe\r\n      className=\"map\"\r\n      src=\"https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d16288.794102836984!2d18.0875306497149!3d59.31459942398818!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x465f77f889dab661%3A0xac4115e8b9e72b9b!2s%C3%85s%C3%B6gatan%20175%2C%20116%2032%20Stockholm!5e0!3m2!1sen!2sse!4v1630401928475!5m2!1sen!2sse\"\r\n    ></iframe>\r\n  );\r\n};\r\n\r\nexport default GoogleMap;\r\n","import GoogleMap from \"./ChildComponents/GoogleMap\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Contact() {\r\n  return (\r\n    <div className=\"contactWrapper\">\r\n      <Link to=\"/\">\r\n        <svg className=\"contactLogo\" width=\"163\" height=\"66\" viewBox=\"0 0 163 66\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n          <path d=\"M1.74805 18H0.576172L3.18359 3H4.35547L1.74805 18ZM9.0918 18.1953C8.24544 18.1823 7.51302 17.9479 6.89453 17.4922C6.27604 17.0299 5.82031 16.4049 5.52734 15.6172C5.24089 14.8229 5.13997 13.9668 5.22461 13.0488L5.25391 12.7168C5.34505 11.7402 5.63477 10.8125 6.12305 9.93359C6.61133 9.04818 7.22982 8.37435 7.97852 7.91211C8.72721 7.44336 9.52799 7.21875 10.3809 7.23828C11.1686 7.2513 11.8327 7.46615 12.373 7.88281C12.9199 8.29948 13.3171 8.87891 13.5645 9.62109C13.8118 10.3633 13.89 11.1836 13.7988 12.082L13.7207 12.7949H6.40625L6.37695 13.0293C6.2793 13.7389 6.33138 14.4193 6.5332 15.0703C6.73503 15.7148 7.0638 16.2292 7.51953 16.6133C7.98177 16.9909 8.53516 17.1862 9.17969 17.1992C9.80469 17.2188 10.3678 17.0983 10.8691 16.8379C11.3704 16.5775 11.8327 16.2292 12.2559 15.793L12.9395 16.3496C12.4642 16.9616 11.8978 17.4271 11.2402 17.7461C10.5892 18.0586 9.87305 18.2083 9.0918 18.1953ZM10.3223 8.23438C9.47591 8.20182 8.71745 8.5013 8.04688 9.13281C7.3763 9.76432 6.87174 10.653 6.5332 11.7988L12.666 11.8086L12.6953 11.6621C12.8125 10.7376 12.6497 9.94336 12.207 9.2793C11.7643 8.60872 11.1361 8.26042 10.3223 8.23438ZM19.1113 4.72852L18.6426 7.43359H20.7617L20.5957 8.39062H18.4766L17.3047 15.4414L17.2852 16.0469C17.2852 16.7565 17.6107 17.1211 18.2617 17.1406C18.4635 17.1471 18.7793 17.1243 19.209 17.0723L19.1602 18.0293C18.776 18.14 18.3854 18.1888 17.9883 18.1758C17.3047 18.1628 16.8066 17.9251 16.4941 17.4629C16.1816 16.9941 16.0677 16.3171 16.1523 15.4316L17.3145 8.39062H15.4199L15.5957 7.43359H17.4707L17.9492 4.72852H19.1113ZM23.1152 7.28711L22.4219 6.74023C23.112 5.93294 23.5417 5.1224 23.7109 4.30859L23.9453 3H25.0879L24.9121 4.11328C24.7103 5.38932 24.1113 6.44727 23.1152 7.28711ZM30.4883 15.2461C30.5924 14.3477 30.0456 13.6966 28.8477 13.293L27.168 12.7949C25.625 12.2741 24.8958 11.4049 24.9805 10.1875C25.026 9.30859 25.4297 8.5957 26.1914 8.04883C26.9596 7.49544 27.8711 7.22526 28.9258 7.23828C29.9609 7.2513 30.8008 7.54427 31.4453 8.11719C32.0898 8.68359 32.3893 9.44206 32.3438 10.3926H31.1914C31.2305 9.76107 31.0319 9.24674 30.5957 8.84961C30.166 8.45247 29.5931 8.2474 28.877 8.23438C28.1348 8.23438 27.5098 8.41016 27.002 8.76172C26.4941 9.10677 26.2077 9.56576 26.1426 10.1387C26.0449 10.9785 26.5592 11.5677 27.6855 11.9062L28.9062 12.2578L29.5605 12.4824C31.0319 13.0358 31.7253 13.9375 31.6406 15.1875C31.5885 16.0339 31.2207 16.7305 30.5371 17.2773C29.86 17.8177 28.9844 18.1204 27.9102 18.1855L27.5098 18.1953C26.8001 18.1823 26.1589 18.0456 25.5859 17.7852C25.013 17.5182 24.5736 17.1471 24.2676 16.6719C23.9616 16.1966 23.8281 15.6497 23.8672 15.0312L25.0293 15.041C25.0293 15.7051 25.2539 16.2292 25.7031 16.6133C26.1523 16.9974 26.7708 17.196 27.5586 17.209C28.3398 17.209 29.0039 17.0332 29.5508 16.6816C30.0977 16.3236 30.4102 15.8451 30.4883 15.2461ZM43.8184 7.22852C44.4499 7.24805 45.026 7.39779 45.5469 7.67773C46.0677 7.95768 46.4779 8.38411 46.7773 8.95703L47.1387 7.43359H48.2227L46.4453 17.8145C46.3216 18.6999 46.0417 19.4811 45.6055 20.1582C45.1693 20.8353 44.6094 21.3529 43.9258 21.7109C43.2487 22.0755 42.4935 22.2448 41.6602 22.2188C40.9961 22.2057 40.3613 22.0397 39.7559 21.7207C39.1439 21.3952 38.6523 20.9427 38.2812 20.3633L39.0039 19.6797C39.6745 20.6888 40.5501 21.2064 41.6309 21.2324C42.5944 21.2585 43.3984 20.9655 44.043 20.3535C44.694 19.748 45.1042 18.9212 45.2734 17.873L45.5273 16.6426C44.5898 17.7168 43.4603 18.2344 42.1387 18.1953C41.1491 18.1693 40.3776 17.7917 39.8242 17.0625C39.2773 16.3268 38.9909 15.3275 38.9648 14.0645C38.9258 12.8991 39.1211 11.7467 39.5508 10.6074C39.9805 9.4681 40.5632 8.61523 41.2988 8.04883C42.041 7.47591 42.8809 7.20247 43.8184 7.22852ZM40.1855 12.8926L40.127 13.8008C40.1074 14.8685 40.293 15.6953 40.6836 16.2812C41.0742 16.8607 41.6504 17.1634 42.4121 17.1895C43.0632 17.2155 43.6719 17.0625 44.2383 16.7305C44.8047 16.3984 45.293 15.9069 45.7031 15.2559L46.5332 10.3242C46.3574 9.69271 46.0514 9.19466 45.6152 8.83008C45.1855 8.45898 44.6322 8.26367 43.9551 8.24414C42.959 8.21159 42.1322 8.5957 41.4746 9.39648C40.8236 10.1973 40.3939 11.3626 40.1855 12.8926ZM53.6035 18.1953C52.7572 18.1823 52.0247 17.9479 51.4062 17.4922C50.7878 17.0299 50.332 16.4049 50.0391 15.6172C49.7526 14.8229 49.6517 13.9668 49.7363 13.0488L49.7656 12.7168C49.8568 11.7402 50.1465 10.8125 50.6348 9.93359C51.123 9.04818 51.7415 8.37435 52.4902 7.91211C53.2389 7.44336 54.0397 7.21875 54.8926 7.23828C55.6803 7.2513 56.3444 7.46615 56.8848 7.88281C57.4316 8.29948 57.8288 8.87891 58.0762 9.62109C58.3236 10.3633 58.4017 11.1836 58.3105 12.082L58.2324 12.7949H50.918L50.8887 13.0293C50.791 13.7389 50.8431 14.4193 51.0449 15.0703C51.2467 15.7148 51.5755 16.2292 52.0312 16.6133C52.4935 16.9909 53.0469 17.1862 53.6914 17.1992C54.3164 17.2188 54.8796 17.0983 55.3809 16.8379C55.8822 16.5775 56.3444 16.2292 56.7676 15.793L57.4512 16.3496C56.9759 16.9616 56.4095 17.4271 55.752 17.7461C55.1009 18.0586 54.3848 18.2083 53.6035 18.1953ZM54.834 8.23438C53.9876 8.20182 53.2292 8.5013 52.5586 9.13281C51.888 9.76432 51.3835 10.653 51.0449 11.7988L57.1777 11.8086L57.207 11.6621C57.3242 10.7376 57.1615 9.94336 56.7188 9.2793C56.276 8.60872 55.6478 8.26042 54.834 8.23438ZM63.623 4.72852L63.1543 7.43359H65.2734L65.1074 8.39062H62.9883L61.8164 15.4414L61.7969 16.0469C61.7969 16.7565 62.1224 17.1211 62.7734 17.1406C62.9753 17.1471 63.291 17.1243 63.7207 17.0723L63.6719 18.0293C63.2878 18.14 62.8971 18.1888 62.5 18.1758C61.8164 18.1628 61.3184 17.9251 61.0059 17.4629C60.6934 16.9941 60.5794 16.3171 60.6641 15.4316L61.8262 8.39062H59.9316L60.1074 7.43359H61.9824L62.4609 4.72852H63.623ZM71.9824 18H70.8105L72.6562 7.43359H73.8184L71.9824 18ZM72.9785 4.37695C73.0111 3.95378 73.291 3.68685 73.8184 3.57617C74.0723 3.62174 74.2513 3.70312 74.3555 3.82031C74.4661 3.93099 74.5378 4.11654 74.5703 4.37695C74.5052 4.62435 74.4108 4.80664 74.2871 4.92383C74.1634 5.03451 73.9779 5.11589 73.7305 5.16797C73.2031 5.08984 72.9525 4.82617 72.9785 4.37695ZM78.0859 7.43359L77.7344 9.24023C78.2031 8.58919 78.7435 8.09115 79.3555 7.74609C79.974 7.39453 80.6348 7.22526 81.3379 7.23828C82.3535 7.26432 83.0924 7.61914 83.5547 8.30273C84.0169 8.98633 84.1797 9.92708 84.043 11.125L82.8906 18H81.7383L82.8906 11.1055C82.9297 10.7344 82.9362 10.3763 82.9102 10.0312C82.7995 8.8724 82.168 8.27669 81.0156 8.24414C80.332 8.23112 79.694 8.4362 79.1016 8.85938C78.5091 9.27604 77.9883 9.90755 77.5391 10.7539L76.2891 18H75.1367L76.9727 7.43359H78.0859Z\" fill=\"#FF7B51\" />\r\n          <path d=\"M20.6445 43.6943C20.4508 45.4147 19.8641 46.9414 18.8843 48.2744C17.9045 49.596 16.6284 50.6157 15.0562 51.3335C13.4839 52.0399 11.7863 52.376 9.96338 52.3418C8.32275 52.3076 6.8929 51.9316 5.67383 51.2139C4.45475 50.4847 3.49202 49.4365 2.78564 48.0693C2.09066 46.6908 1.69759 45.1071 1.60645 43.3184C1.52669 41.917 1.66911 40.1738 2.03369 38.0889C2.40967 36.0039 3.07048 34.1525 4.01611 32.5347C4.97314 30.9168 6.10677 29.6351 7.41699 28.6895C9.2627 27.3678 11.3704 26.7298 13.7402 26.7754C16.3151 26.821 18.3545 27.6185 19.8584 29.168C21.3737 30.7061 22.2054 32.848 22.3535 35.5938L17.3633 35.5767C17.3633 34.0044 17.05 32.8537 16.4233 32.1245C15.7967 31.3953 14.8226 31.008 13.501 30.9624C11.792 30.9054 10.3849 31.515 9.27979 32.791C8.18604 34.0671 7.45117 35.9299 7.0752 38.3794C6.71061 40.7606 6.55111 42.5436 6.59668 43.7285C6.65365 45.2324 6.98975 46.3433 7.60498 47.061C8.22021 47.7674 9.0804 48.1377 10.1855 48.1719C11.7122 48.2288 12.9313 47.87 13.8428 47.0952C14.7656 46.3091 15.3752 45.1868 15.6714 43.7285L20.6445 43.6943ZM32.7441 52.3418C31.0921 52.3076 29.6338 51.9202 28.3691 51.1797C27.1159 50.4277 26.119 49.3511 25.3784 47.9497C24.6493 46.5369 24.2277 44.9191 24.1138 43.0962C23.9884 41.2277 24.1878 39.2339 24.7119 37.1147C25.236 34.9956 26.0791 33.1328 27.2412 31.5264C28.4033 29.9199 29.7648 28.7179 31.3257 27.9204C32.8979 27.1229 34.5955 26.7412 36.4185 26.7754C38.0933 26.8096 39.5573 27.2083 40.8105 27.9717C42.0638 28.7236 43.0493 29.8117 43.7671 31.2358C44.4849 32.6486 44.895 34.255 44.9976 36.0552C45.1115 38.0604 44.895 40.1226 44.3481 42.2417C43.8013 44.3608 42.9525 46.1951 41.8018 47.7446C40.651 49.2941 39.3009 50.4562 37.7515 51.231C36.2134 52.0057 34.5443 52.376 32.7441 52.3418ZM39.8364 38.875L39.9731 37.2515C40.0871 35.2235 39.8136 33.6854 39.1528 32.6372C38.5034 31.589 37.5122 31.0422 36.1792 30.9966C34.0942 30.9282 32.4365 31.8511 31.2061 33.7651C29.987 35.6792 29.2977 38.3566 29.1382 41.7974C29.0243 43.814 29.292 45.3691 29.9414 46.4629C30.5908 47.5452 31.5991 48.1092 32.9663 48.1548C34.755 48.2345 36.2362 47.5396 37.4097 46.0698C38.5832 44.5887 39.3522 42.498 39.7168 39.7979L39.8364 38.875ZM66.0352 52H61.1816L54.2603 35.4058L51.3721 52H46.3647L50.6885 27.1172H55.5249L62.4634 43.7456L65.3516 27.1172H70.3418L66.0352 52ZM91.8066 31.27H84.4238L80.835 52H75.8276L79.4165 31.27H72.1191L72.854 27.1172H92.5415L91.8066 31.27ZM103.787 46.873H95.105L92.5415 52H87.0215L100.317 27.1172H104.949L109.683 52H104.573L103.787 46.873ZM97.1558 42.7202H103.154L101.753 33.4575L97.1558 42.7202ZM132.104 43.6943C131.911 45.4147 131.324 46.9414 130.344 48.2744C129.364 49.596 128.088 50.6157 126.516 51.3335C124.944 52.0399 123.246 52.376 121.423 52.3418C119.783 52.3076 118.353 51.9316 117.134 51.2139C115.915 50.4847 114.952 49.4365 114.246 48.0693C113.551 46.6908 113.158 45.1071 113.066 43.3184C112.987 41.917 113.129 40.1738 113.494 38.0889C113.87 36.0039 114.53 34.1525 115.476 32.5347C116.433 30.9168 117.567 29.6351 118.877 28.6895C120.723 27.3678 122.83 26.7298 125.2 26.7754C127.775 26.821 129.814 27.6185 131.318 29.168C132.834 30.7061 133.665 32.848 133.813 35.5938L128.823 35.5767C128.823 34.0044 128.51 32.8537 127.883 32.1245C127.257 31.3953 126.283 31.008 124.961 30.9624C123.252 30.9054 121.845 31.515 120.74 32.791C119.646 34.0671 118.911 35.9299 118.535 38.3794C118.171 40.7606 118.011 42.5436 118.057 43.7285C118.114 45.2324 118.45 46.3433 119.065 47.061C119.68 47.7674 120.54 48.1377 121.646 48.1719C123.172 48.2288 124.391 47.87 125.303 47.0952C126.226 46.3091 126.835 45.1868 127.131 43.7285L132.104 43.6943ZM155.483 31.27H148.101L144.512 52H139.504L143.093 31.27H135.796L136.531 27.1172H156.218L155.483 31.27Z\" fill=\"#FF7B51\" />\r\n          <path d=\"M0 55.418H154.509V57.127H0V55.418Z\" fill=\"#FF7B51\" />\r\n        </svg>\r\n\r\n      </Link>\r\n\r\n      <div className=\"infoSection\">\r\n        <div className=\"mapWrapper\">\r\n          <GoogleMap></GoogleMap>\r\n        </div>\r\n        <div className=\"infoWrapper\">\r\n          <div className=\"openingHours\">\r\n            <div className=\"inforHeadersWrapper\">\r\n              <svg\r\n                width=\"100\"\r\n                height=\"53\"\r\n                viewBox=\"0 0 100 53\"\r\n                fill=\"none\"\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n              >\r\n                <path\r\n                  d=\"M100 27.9768C100 53 77.8285 53 50.1381 53C22.4476 53 0 53 0 25.0232C0 0 22.1715 0 49.8619 0C77.5524 0 100 0 100 27.9768Z\"\r\n                  fill=\"#FFAF75\"\r\n                />\r\n                <path\r\n                  d=\"M28.4551 33.0439H25.5938L26.6484 26.9501H21.1309L20.0664 33.0439H17.2051L19.6758 18.8251H22.5371L21.5312 24.5869H27.0586L28.0547 18.8251H30.916L28.4551 33.0439ZM36.7266 33.2392C35.7826 33.2197 34.9492 32.9983 34.2266 32.5751C33.5104 32.1454 32.9408 31.5302 32.5176 30.7294C32.1009 29.9221 31.86 28.9977 31.7949 27.956C31.7233 26.8883 31.8372 25.749 32.1367 24.538C32.4362 23.3271 32.918 22.2626 33.582 21.3447C34.2461 20.4267 35.0241 19.7398 35.916 19.2841C36.8145 18.8284 37.7845 18.6103 38.8262 18.6298C39.7832 18.6494 40.6198 18.8772 41.3359 19.3134C42.0521 19.7431 42.6152 20.3648 43.0254 21.1786C43.4355 21.9859 43.6699 22.9039 43.7285 23.9326C43.7936 25.0784 43.6699 26.2568 43.3574 27.4677C43.0449 28.6786 42.5599 29.7268 41.9023 30.6122C41.2448 31.4977 40.4733 32.1617 39.5879 32.6044C38.709 33.0471 37.7552 33.2587 36.7266 33.2392ZM40.7793 25.5439L40.8574 24.6161C40.9225 23.4573 40.7663 22.5784 40.3887 21.9794C40.0176 21.3805 39.4512 21.068 38.6895 21.0419C37.498 21.0029 36.5508 21.5302 35.8477 22.624C35.151 23.7177 34.7572 25.2477 34.666 27.2138C34.6009 28.3661 34.7539 29.2548 35.125 29.8798C35.4961 30.4983 36.0723 30.8206 36.8535 30.8466C37.8757 30.8922 38.722 30.4951 39.3926 29.6552C40.0632 28.8089 40.5026 27.6142 40.7109 26.0712L40.7793 25.5439ZM57.4785 18.8251L55.877 28.2001C55.6556 29.7691 55.0046 31.0094 53.9238 31.9208C52.8431 32.8323 51.502 33.275 49.9004 33.249C48.8978 33.2294 48.0254 33.0113 47.2832 32.5947C46.5475 32.1715 46.0039 31.579 45.6523 30.8173C45.3008 30.0491 45.1803 29.18 45.291 28.2099L46.8828 18.8251H49.7441L48.1523 28.2197C48.1068 28.5842 48.1035 28.926 48.1426 29.2451C48.2728 30.2997 48.901 30.8466 50.0273 30.8857C50.8346 30.9117 51.4954 30.6904 52.0098 30.2216C52.5241 29.7529 52.8561 29.0823 53.0059 28.2099L54.6074 18.8251H57.4785ZM63.4746 27.8388H61.1504L60.2422 33.0439H57.3809L59.8516 18.8251L64.5586 18.8349C66.1341 18.8349 67.3451 19.206 68.1914 19.9482C69.0443 20.6904 69.4219 21.7223 69.3242 23.0439C69.1875 24.997 68.1458 26.3544 66.1992 27.1161L68.2012 32.8876V33.0439H65.1543L63.4746 27.8388ZM61.5605 25.4658L63.6895 25.4853C64.4447 25.4723 65.0664 25.2704 65.5547 24.8798C66.0495 24.4827 66.3457 23.9456 66.4434 23.2685C66.5345 22.637 66.4336 22.1422 66.1406 21.7841C65.8477 21.426 65.3822 21.234 64.7441 21.2079L62.3027 21.1982L61.5605 25.4658ZM77.6836 29.2451C77.8203 28.4703 77.4395 27.8779 76.541 27.4677L74.6562 26.7158C72.4688 25.7392 71.4303 24.3948 71.541 22.6826C71.5866 21.8883 71.847 21.1852 72.3223 20.5732C72.7975 19.9612 73.4648 19.4827 74.3242 19.1376C75.1836 18.7861 76.1113 18.6168 77.1074 18.6298C78.4811 18.6559 79.5911 19.066 80.4375 19.8603C81.2839 20.6481 81.7005 21.706 81.6875 23.0341H78.8359C78.8685 22.3896 78.7253 21.8883 78.4062 21.5302C78.0938 21.1721 77.6055 20.9866 76.9414 20.9736C76.2904 20.9606 75.724 21.1103 75.2422 21.4228C74.7604 21.7288 74.474 22.152 74.3828 22.6923C74.2591 23.402 74.7344 23.9651 75.8086 24.3818L77.0977 24.8701L77.8398 25.2119C79.7604 26.1624 80.6589 27.497 80.5352 29.2158C80.4766 30.0556 80.2064 30.7815 79.7246 31.3935C79.2493 31.999 78.5983 32.4645 77.7715 32.79C76.9512 33.1155 76.0462 33.2685 75.0566 33.249C74.0475 33.2294 73.1491 33.0178 72.3613 32.6142C71.5736 32.2106 70.9746 31.6409 70.5645 30.9052C70.1803 30.2216 70.0013 29.4404 70.0273 28.5615L72.8887 28.5712C72.7975 30.1142 73.556 30.8987 75.1641 30.9247C75.8607 30.9247 76.4336 30.7717 76.8828 30.4658C77.332 30.1598 77.599 29.7529 77.6836 29.2451Z\"\r\n                  fill=\"#333300\"\r\n                />\r\n              </svg>\r\n            </div>\r\n\r\n            <div className=\"openingHours-col\">\r\n              <p>Mon-Fri</p>\r\n              <hr className=\"dots\" />\r\n              <p>12-00</p>\r\n            </div>\r\n            <div className=\"openingHours-col\">\r\n              <p>Sat-Sun</p>\r\n              <hr className=\"dots\" />\r\n              <p>09-00</p>\r\n            </div>\r\n          </div>\r\n          <div className=\"loaction\">\r\n            <div className=\"locationInfo\">\r\n              <div className=\"inforHeadersWrapper\">\r\n                <svg\r\n                  width=\"202\"\r\n                  height=\"53\"\r\n                  viewBox=\"0 0 202 53\"\r\n                  fill=\"none\"\r\n                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                >\r\n                  <path\r\n                    d=\"M202 27.9768C202 53 157.214 53 101.279 53C45.3441 53 0 53 0 25.0232C0 0 44.7864 0 100.721 0C156.656 0 202 0 202 27.9768Z\"\r\n                    fill=\"#FFAF75\"\r\n                  />\r\n                  <path\r\n                    d=\"M28.6699 28.9131L32.0977 18.8252H35.0176L29.7344 33.0439H26.8535L26.1016 23.5713L22.3809 33.0439H19.5L18.6602 18.8252H21.4531L21.7363 28.8643L25.5645 18.8252H27.9961L28.6699 28.9131ZM45.5254 33.0439H42.6641L43.7188 26.9502H38.2012L37.1367 33.0439H34.2754L36.7461 18.8252H39.6074L38.6016 24.5869H44.1289L45.125 18.8252H47.9863L45.5254 33.0439ZM57.4688 26.8818H52.0195L51.3555 30.6904H57.7617L57.3516 33.0439H48.084L50.5547 18.8252H59.8027L59.3828 21.1982H53.0059L52.4102 24.5869H57.8789L57.4688 26.8818ZM65.1934 27.8389H62.8691L61.9609 33.0439H59.0996L61.5703 18.8252L66.2773 18.835C67.8529 18.835 69.0638 19.2061 69.9102 19.9482C70.763 20.6904 71.1406 21.7223 71.043 23.0439C70.9062 24.9971 69.8646 26.3545 67.918 27.1162L69.9199 32.8877V33.0439H66.873L65.1934 27.8389ZM63.2793 25.4658L65.4082 25.4854C66.1634 25.4723 66.7852 25.2705 67.2734 24.8799C67.7682 24.4827 68.0645 23.9456 68.1621 23.2686C68.2533 22.637 68.1523 22.1423 67.8594 21.7842C67.5664 21.4261 67.1009 21.234 66.4629 21.208L64.0215 21.1982L63.2793 25.4658ZM80.9648 26.8818H75.5156L74.8516 30.6904H81.2578L80.8477 33.0439H71.5801L74.0508 18.8252H83.2988L82.8789 21.1982H76.502L75.9062 24.5869H81.375L80.9648 26.8818ZM99.4023 21.1982H95.1836L93.1328 33.0439H90.2715L92.3223 21.1982H88.1523L88.5723 18.8252H99.8223L99.4023 21.1982ZM104.5 33.2393C103.556 33.2197 102.723 32.9984 102 32.5752C101.284 32.1455 100.714 31.5303 100.291 30.7295C99.8743 29.9222 99.6335 28.9977 99.5684 27.9561C99.4967 26.8883 99.6107 25.749 99.9102 24.5381C100.21 23.3271 100.691 22.2627 101.355 21.3447C102.02 20.4268 102.798 19.7399 103.689 19.2842C104.588 18.8285 105.558 18.6104 106.6 18.6299C107.557 18.6494 108.393 18.8773 109.109 19.3135C109.826 19.7432 110.389 20.3649 110.799 21.1787C111.209 21.986 111.443 22.904 111.502 23.9326C111.567 25.0785 111.443 26.2568 111.131 27.4678C110.818 28.6787 110.333 29.7269 109.676 30.6123C109.018 31.4977 108.247 32.1618 107.361 32.6045C106.482 33.0472 105.529 33.2588 104.5 33.2393ZM108.553 25.5439L108.631 24.6162C108.696 23.4574 108.54 22.5785 108.162 21.9795C107.791 21.3805 107.225 21.068 106.463 21.042C105.271 21.0029 104.324 21.5303 103.621 22.624C102.924 23.7178 102.531 25.2477 102.439 27.2139C102.374 28.3662 102.527 29.2549 102.898 29.8799C103.27 30.4984 103.846 30.8206 104.627 30.8467C105.649 30.8923 106.495 30.4951 107.166 29.6553C107.837 28.8089 108.276 27.6143 108.484 26.0713L108.553 25.5439ZM126.551 27.2334H121.102L120.086 33.0439H117.225L119.695 18.8252H128.699L128.279 21.1982H122.146L121.502 24.8701H126.971L126.551 27.2334ZM130.994 33.0439H128.133L130.594 18.8252H133.455L130.994 33.0439ZM144.949 33.0439H142.176L138.221 23.5615L136.57 33.0439H133.709L136.18 18.8252H138.943L142.908 28.3271L144.559 18.8252H147.41L144.949 33.0439ZM147.518 33.0439L149.988 18.8252L154.07 18.835C155.027 18.8545 155.887 19.0726 156.648 19.4893C157.417 19.8994 158.038 20.4919 158.514 21.2666C158.989 22.0413 159.275 22.9137 159.373 23.8838C159.425 24.4502 159.419 25.0296 159.354 25.6221L159.285 26.1396C158.999 28.223 158.178 29.8962 156.824 31.1592C155.477 32.4157 153.839 33.0439 151.912 33.0439H147.518ZM152.439 21.1982L150.789 30.6904L151.98 30.7002C153.296 30.7002 154.35 30.2184 155.145 29.2549C155.945 28.2913 156.404 26.8363 156.521 24.8896L156.541 24.5771C156.561 23.5029 156.355 22.6794 155.926 22.1064C155.496 21.5335 154.855 21.234 154.002 21.208L152.439 21.1982ZM178.143 18.8252L176.541 28.2002C176.32 29.7692 175.669 31.0094 174.588 31.9209C173.507 32.8324 172.166 33.2751 170.564 33.249C169.562 33.2295 168.689 33.0114 167.947 32.5947C167.212 32.1715 166.668 31.5791 166.316 30.8174C165.965 30.0492 165.844 29.18 165.955 28.21L167.547 18.8252H170.408L168.816 28.2197C168.771 28.5843 168.768 28.9261 168.807 29.2451C168.937 30.2998 169.565 30.8467 170.691 30.8857C171.499 30.9118 172.16 30.6904 172.674 30.2217C173.188 29.7529 173.52 29.0824 173.67 28.21L175.271 18.8252H178.143ZM185.867 29.2451C186.004 28.4704 185.623 27.8779 184.725 27.4678L182.84 26.7158C180.652 25.7393 179.614 24.3949 179.725 22.6826C179.77 21.8883 180.031 21.1852 180.506 20.5732C180.981 19.9613 181.648 19.4827 182.508 19.1377C183.367 18.7861 184.295 18.6169 185.291 18.6299C186.665 18.6559 187.775 19.0661 188.621 19.8604C189.467 20.6481 189.884 21.7061 189.871 23.0342H187.02C187.052 22.3896 186.909 21.8883 186.59 21.5303C186.277 21.1722 185.789 20.9867 185.125 20.9736C184.474 20.9606 183.908 21.1104 183.426 21.4229C182.944 21.7288 182.658 22.152 182.566 22.6924C182.443 23.402 182.918 23.9652 183.992 24.3818L185.281 24.8701L186.023 25.2119C187.944 26.1624 188.842 27.4971 188.719 29.2158C188.66 30.0557 188.39 30.7816 187.908 31.3936C187.433 31.999 186.782 32.4645 185.955 32.79C185.135 33.1156 184.23 33.2686 183.24 33.249C182.231 33.2295 181.333 33.0179 180.545 32.6143C179.757 32.2106 179.158 31.641 178.748 30.9053C178.364 30.2217 178.185 29.4404 178.211 28.5615L181.072 28.5713C180.981 30.1143 181.74 30.8988 183.348 30.9248C184.044 30.9248 184.617 30.7718 185.066 30.4658C185.516 30.1598 185.783 29.7529 185.867 29.2451Z\"\r\n                    fill=\"#333300\"\r\n                  />\r\n                </svg>\r\n              </div>\r\n\r\n              <address>\r\n                <a className=\"address\" href=\"\">\r\n                  Åsögatan 175\r\n                </a>\r\n                <a className=\"email\" href=\"mailto:latenightbrunch@contact.com\">\r\n                  latenightbrunch@contact.com\r\n                </a>\r\n                <a className=\"phoneNumber\" href=\"tel:08-1234567\">\r\n                  08-123 45 67\r\n                </a>\r\n              </address>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Contact;\r\n","/**\r\n *\r\n * @param maxIdx the length of the array we want to generate the random index of\r\n * @returns random index between 0 and the length of the array\r\n */\r\n\r\nexport const randomIndexGen = (maxIdx: number) => {\r\n  return Math.floor(Math.random() * maxIdx);\r\n};\r\n","import { Button } from \"@material-ui/core\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\n\r\ninterface IDialogBox {\r\n  open: boolean;\r\n  closeDialog: () => void;\r\n  deleteBooking: () => void;\r\n}\r\n\r\n/**\r\n * Component shows when the admin clicks on the \"cancel\" button\r\n * \"Cancel\" and \"Delete Booking\" buttons trigger actions in the parent component\r\n */\r\n\r\nexport const DialogBox = ({ open, closeDialog, deleteBooking }: IDialogBox) => {\r\n  //Runs on button click, triggers actions on the parent BookingCard component\r\n  const handleClose = (e: React.MouseEvent) => {\r\n    const buttonClicked = (e.target as HTMLSpanElement).innerText;\r\n\r\n    if (buttonClicked === \"CANCEL\") {\r\n      closeDialog();\r\n    } else {\r\n      deleteBooking();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      aria-labelledby=\"alert-dialog-title\"\r\n      aria-describedby=\"alert-dialog-description\"\r\n    >\r\n      <DialogTitle>{\"Are you sure you wanna delete this booking?\"}</DialogTitle>\r\n      <DialogContent>\r\n        <DialogContentText>This action cannot be undone.</DialogContentText>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={(e) => handleClose(e)} color=\"primary\">\r\n          Cancel\r\n        </Button>\r\n        <Button onClick={(e) => handleClose(e)} color=\"secondary\" autoFocus>\r\n          Delete Booking\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nDialogBox.defaultProps = {\r\n  open: true,\r\n  linkToDelete: \"/random-link\",\r\n};\r\n","import { db } from \"./../firebase\";\r\nimport { IBookingState } from \"../models/IBookingState\";\r\nimport { sendEmailCancellation } from \"./emailSendOut\";\r\n\r\n/**\r\n * Simple function that takes an object and DELETEs it from the database, then sends an email comformation to the guest\r\n * @param bookingObj Booking object that will be sent as an argument to the sendEmailCancellation fn\r\n */\r\n\r\nexport const deleteBookingAndSendConfirmation = (bookingObj: IBookingState) => {\r\n  db.collection(\"bookings\").doc(bookingObj.id).delete();\r\n  sendEmailCancellation(bookingObj);\r\n};\r\n","import { useState } from \"react\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport { IBookingState } from \"../../models/IBookingState\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Edit, Delete } from \"@material-ui/icons\";\r\nimport { randomIndexGen } from \"../../utils/randomIndexGen\";\r\nimport { DialogBox } from \"../Admin/ChildComponents/DialogBox\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport { deleteBookingAndSendConfirmation } from \"../../utils/deleteBookingFromDB\";\r\n\r\ninterface IBookingCard {\r\n  bookingObj: IBookingState;\r\n}\r\n\r\nexport default function BookingCardCancellation({ bookingObj }: IBookingCard) {\r\n  const [dialogBoxOpen, setDialogBoxOpen] = useState(false);\r\n\r\n  const foodEmojis = [\r\n    \"🍗\",\r\n    \"🥩\",\r\n    \"🥓\",\r\n    \"🍔\",\r\n    \"🍟\",\r\n    \"🍕\",\r\n    \"🌭\",\r\n    \"🥪\",\r\n    \"🌮\",\r\n    \"🌯\",\r\n    \"🥙\",\r\n    \"🍩\",\r\n    \"🧁\",\r\n    \"🍹\",\r\n    \"🍓\",\r\n    \"🥑\",\r\n    \"🥗\",\r\n  ];\r\n\r\n  const {\r\n    firstName,\r\n    lastName,\r\n    numberOfGuests,\r\n    numberOfTables,\r\n    date,\r\n    sitting,\r\n    bookingReference,\r\n  } = bookingObj;\r\n\r\n  const randomIdx: number = randomIndexGen(foodEmojis.length);\r\n\r\n  const toggleDialogBox = (): void => {\r\n    setDialogBoxOpen((prevState) => !prevState);\r\n  };\r\n  const deleteBookingFromDB = (): void => {\r\n    deleteBookingAndSendConfirmation(bookingObj);\r\n    toggleDialogBox();\r\n  };\r\n\r\n  return (\r\n    <Card className=\"booking-card cancellationCard\">\r\n      {dialogBoxOpen && (\r\n        <DialogBox\r\n          open={dialogBoxOpen}\r\n          linkToDelete={bookingReference!}\r\n          closeDialog={toggleDialogBox}\r\n          deleteBooking={deleteBookingFromDB}\r\n        />\r\n      )}\r\n      <CardContent className=\"booking-card__content-container\">\r\n        <section className=\"booking-card__icon\">\r\n          {foodEmojis[randomIdx]}\r\n        </section>\r\n        <section className=\"booking-card__content\">\r\n          <div>\r\n            <span className=\"bold\">Guest: </span>\r\n            {`${firstName} ${lastName}`}\r\n          </div>\r\n          <div>\r\n            <span className=\"bold\">Party Size: </span>\r\n            {`${numberOfGuests} guests / ${numberOfTables} ${\r\n              numberOfTables === 1 ? \"table\" : \"tables\"\r\n            }`}\r\n          </div>\r\n          <div>\r\n            <span className=\"bold\">Arrival day: </span>\r\n            {`${date} / ${sitting}`}\r\n          </div>\r\n          <div>\r\n            <span className=\"bold\">Ref: </span>\r\n            {bookingReference}\r\n          </div>\r\n        </section>\r\n        <section className=\"booking-card__actions\">\r\n          <Divider light />\r\n          <div>\r\n            <div className=\"booking-card__actions__container\">\r\n              <Link\r\n                to={`/admin/edit/${bookingReference}`}\r\n                className=\"booking-card__actions--edit\"\r\n              ></Link>\r\n              <Button\r\n                onClick={toggleDialogBox}\r\n                className=\"booking-card__actions--edit\"\r\n              >\r\n                <div className=\"edit-inner delete\">\r\n                  <Delete style={{ color: \"#FF7B51\" }} />\r\n                  <p>Cancel</p>\r\n                </div>\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </section>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n\r\nBookingCardCancellation.defaultProps = {\r\n  numberOfGuests: 3,\r\n  numberOfTables: 1,\r\n  firstName: \"Danny\",\r\n  lastName: \"Isaac\",\r\n  date: \"2021-09-29\",\r\n  sitting: \"18:00\",\r\n  bookingReference: \"SOM4rVuijjAFHfewPe\",\r\n};\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport firebase from \"firebase\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useCollectionData } from \"react-firebase-hooks/firestore\";\r\nimport { Redirect, useParams } from \"react-router\";\r\nimport { db } from \"../../firebase\";\r\nimport { IBookingState } from \"../../models/IBookingState\";\r\nimport { sendEmailCancellation } from \"../../utils/emailSendOut\";\r\nimport BookingCardCancellation from \"./BookingCardCancellation\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction CancellationComponent() {\r\n  const bookingsCollectionRef = db.collection(\"bookings\");\r\n  const [snapshot] = useCollectionData<IBookingState>(bookingsCollectionRef, {\r\n    idField: \"id\",\r\n  });\r\n\r\n  const [redirect, setRedirect] = useState(false);\r\n\r\n  interface IParams {\r\n    bookingReference: string;\r\n  }\r\n\r\n  let { bookingReference } = useParams<IParams>();\r\n\r\n  //Booking to be cancelled\r\n  const [data, setData] = useState<\r\n    firebase.firestore.DocumentData | IBookingState\r\n  >();\r\n\r\n  useEffect(() => {\r\n    // eslint-disable-next-line array-callback-return\r\n    snapshot?.map((booking) => {\r\n      if (booking.bookingReference === bookingReference) {\r\n        return setData(booking);\r\n      }\r\n    });\r\n  }, [snapshot]);\r\n\r\n  //delete document, send email, redirect to confirmation\r\n  function deleteBooking() {\r\n    db.collection(\"bookings\").doc(data?.id).delete();\r\n    sendEmailCancellation(data as IBookingState);\r\n    setRedirect(true);\r\n  }\r\n\r\n  if (redirect) {\r\n    return <Redirect to=\"/confirmCancellation\" />;\r\n  }\r\n\r\n  return (\r\n    <div className=\"cancellationWrapper\">\r\n      <div>\r\n        <Link to=\"/\">\r\n          <svg\r\n            className=\"heading\"\r\n            width=\"10em\"\r\n            height=\"6em\"\r\n            viewBox=\"0 0 150 66\"\r\n            fill=\"none\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n          >\r\n            <path\r\n              d=\"M1.74805 18H0.576172L3.18359 3H4.35547L1.74805 18ZM11.4746 18C11.4421 17.7526 11.4323 17.5052 11.4453 17.2578L11.5332 16.5254C11.0449 17.0527 10.485 17.4661 9.85352 17.7656C9.22852 18.0651 8.55143 18.2083 7.82227 18.1953C6.93034 18.1823 6.20443 17.9023 5.64453 17.3555C5.09115 16.8021 4.84375 16.1087 4.90234 15.2754C4.95443 14.5788 5.19206 13.9766 5.61523 13.4688C6.04492 12.9544 6.65365 12.5573 7.44141 12.2773C8.22917 11.9909 9.11133 11.8477 10.0879 11.8477L12.2461 11.8574L12.4219 10.6465C12.5 9.92383 12.3438 9.3444 11.9531 8.9082C11.5625 8.47201 10.9863 8.24089 10.2246 8.21484C9.45638 8.20182 8.78581 8.39388 8.21289 8.79102C7.64648 9.18164 7.29167 9.69922 7.14844 10.3438H6.00586C6.13607 9.41927 6.61133 8.66732 7.43164 8.08789C8.25195 7.50195 9.22201 7.21549 10.3418 7.22852C11.429 7.25456 12.2656 7.58333 12.8516 8.21484C13.444 8.84635 13.6849 9.66667 13.5742 10.6758L12.6953 15.9883L12.6172 16.8379C12.5977 17.1895 12.6237 17.5378 12.6953 17.8828L12.6758 18H11.4746ZM8.01758 17.1699C8.73372 17.196 9.41732 17.0267 10.0684 16.6621C10.7259 16.291 11.2695 15.7669 11.6992 15.0898L12.0996 12.7559L10.2344 12.7461C9.04948 12.7461 8.08268 12.9577 7.33398 13.3809C6.58529 13.7975 6.17188 14.3965 6.09375 15.1777C6.03516 15.7507 6.1849 16.2227 6.54297 16.5938C6.90755 16.9648 7.39909 17.1569 8.01758 17.1699ZM19.4824 4.72852L19.0137 7.43359H21.1328L20.9668 8.39062H18.8477L17.6758 15.4414L17.6562 16.0469C17.6562 16.7565 17.9818 17.1211 18.6328 17.1406C18.8346 17.1471 19.1504 17.1243 19.5801 17.0723L19.5312 18.0293C19.1471 18.14 18.7565 18.1888 18.3594 18.1758C17.6758 18.1628 17.1777 17.9251 16.8652 17.4629C16.5527 16.9941 16.4388 16.3171 16.5234 15.4316L17.6855 8.39062H15.791L15.9668 7.43359H17.8418L18.3203 4.72852H19.4824ZM25.9082 18.1953C25.0618 18.1823 24.3294 17.9479 23.7109 17.4922C23.0924 17.0299 22.6367 16.4049 22.3438 15.6172C22.0573 14.8229 21.9564 13.9668 22.041 13.0488L22.0703 12.7168C22.1615 11.7402 22.4512 10.8125 22.9395 9.93359C23.4277 9.04818 24.0462 8.37435 24.7949 7.91211C25.5436 7.44336 26.3444 7.21875 27.1973 7.23828C27.985 7.2513 28.6491 7.46615 29.1895 7.88281C29.7363 8.29948 30.1335 8.87891 30.3809 9.62109C30.6283 10.3633 30.7064 11.1836 30.6152 12.082L30.5371 12.7949H23.2227L23.1934 13.0293C23.0957 13.7389 23.1478 14.4193 23.3496 15.0703C23.5514 15.7148 23.8802 16.2292 24.3359 16.6133C24.7982 16.9909 25.3516 17.1862 25.9961 17.1992C26.6211 17.2188 27.1842 17.0983 27.6855 16.8379C28.1868 16.5775 28.6491 16.2292 29.0723 15.793L29.7559 16.3496C29.2806 16.9616 28.7142 17.4271 28.0566 17.7461C27.4056 18.0586 26.6895 18.2083 25.9082 18.1953ZM27.1387 8.23438C26.2923 8.20182 25.5339 8.5013 24.8633 9.13281C24.1927 9.76432 23.6882 10.653 23.3496 11.7988L29.4824 11.8086L29.5117 11.6621C29.6289 10.7376 29.4661 9.94336 29.0234 9.2793C28.5807 8.60872 27.9525 8.26042 27.1387 8.23438ZM39.6094 7.43359L39.2578 9.24023C39.7266 8.58919 40.2669 8.09115 40.8789 7.74609C41.4974 7.39453 42.1582 7.22526 42.8613 7.23828C43.877 7.26432 44.6159 7.61914 45.0781 8.30273C45.5404 8.98633 45.7031 9.92708 45.5664 11.125L44.4141 18H43.2617L44.4141 11.1055C44.4531 10.7344 44.4596 10.3763 44.4336 10.0312C44.3229 8.8724 43.6914 8.27669 42.5391 8.24414C41.8555 8.23112 41.2174 8.4362 40.625 8.85938C40.0326 9.27604 39.5117 9.90755 39.0625 10.7539L37.8125 18H36.6602L38.4961 7.43359H39.6094ZM48.7207 18H47.5488L49.3945 7.43359H50.5566L48.7207 18ZM49.7168 4.37695C49.7493 3.95378 50.0293 3.68685 50.5566 3.57617C50.8105 3.62174 50.9896 3.70312 51.0938 3.82031C51.2044 3.93099 51.276 4.11654 51.3086 4.37695C51.2435 4.62435 51.1491 4.80664 51.0254 4.92383C50.9017 5.03451 50.7161 5.11589 50.4688 5.16797C49.9414 5.08984 49.6908 4.82617 49.7168 4.37695ZM57.1387 7.22852C57.7702 7.24805 58.3464 7.39779 58.8672 7.67773C59.388 7.95768 59.7982 8.38411 60.0977 8.95703L60.459 7.43359H61.543L59.7656 17.8145C59.6419 18.6999 59.362 19.4811 58.9258 20.1582C58.4896 20.8353 57.9297 21.3529 57.2461 21.7109C56.569 22.0755 55.8138 22.2448 54.9805 22.2188C54.3164 22.2057 53.6816 22.0397 53.0762 21.7207C52.4642 21.3952 51.9727 20.9427 51.6016 20.3633L52.3242 19.6797C52.9948 20.6888 53.8704 21.2064 54.9512 21.2324C55.9147 21.2585 56.7188 20.9655 57.3633 20.3535C58.0143 19.748 58.4245 18.9212 58.5938 17.873L58.8477 16.6426C57.9102 17.7168 56.7806 18.2344 55.459 18.1953C54.4694 18.1693 53.6979 17.7917 53.1445 17.0625C52.5977 16.3268 52.3112 15.3275 52.2852 14.0645C52.2461 12.8991 52.4414 11.7467 52.8711 10.6074C53.3008 9.4681 53.8835 8.61523 54.6191 8.04883C55.3613 7.47591 56.2012 7.20247 57.1387 7.22852ZM53.5059 12.8926L53.4473 13.8008C53.4277 14.8685 53.6133 15.6953 54.0039 16.2812C54.3945 16.8607 54.9707 17.1634 55.7324 17.1895C56.3835 17.2155 56.9922 17.0625 57.5586 16.7305C58.125 16.3984 58.6133 15.9069 59.0234 15.2559L59.8535 10.3242C59.6777 9.69271 59.3717 9.19466 58.9355 8.83008C58.5059 8.45898 57.9525 8.26367 57.2754 8.24414C56.2793 8.21159 55.4525 8.5957 54.7949 9.39648C54.1439 10.1973 53.7142 11.3626 53.5059 12.8926ZM65.3418 9.2207C66.3574 7.87305 67.5553 7.21224 68.9355 7.23828C69.9512 7.26432 70.6901 7.61914 71.1523 8.30273C71.6146 8.98633 71.7773 9.92708 71.6406 11.125L70.4883 18H69.3359L70.4883 11.1055C70.5273 10.7344 70.5339 10.3763 70.5078 10.0312C70.3971 8.8724 69.7656 8.27669 68.6133 8.24414C67.9297 8.23112 67.2917 8.4362 66.6992 8.85938C66.1068 9.27604 65.5859 9.90755 65.1367 10.7539L63.8867 18H62.7344L65.3418 3H66.4941L65.3418 9.2207ZM77.5684 4.72852L77.0996 7.43359H79.2188L79.0527 8.39062H76.9336L75.7617 15.4414L75.7422 16.0469C75.7422 16.7565 76.0677 17.1211 76.7188 17.1406C76.9206 17.1471 77.2363 17.1243 77.666 17.0723L77.6172 18.0293C77.2331 18.14 76.8424 18.1888 76.4453 18.1758C75.7617 18.1628 75.2637 17.9251 74.9512 17.4629C74.6387 16.9941 74.5247 16.3171 74.6094 15.4316L75.7715 8.39062H73.877L74.0527 7.43359H75.9277L76.4062 4.72852H77.5684Z\"\r\n              fill=\"#FF7B51\"\r\n            />\r\n            <path\r\n              d=\"M0.358887 52L4.68262 27.1172L12.4414 27.1343C15.3239 27.1457 17.4886 27.7324 18.9355 28.8945C20.3825 30.0566 21.0376 31.6916 20.9009 33.7993C20.7414 36.3172 19.2887 38.1572 16.543 39.3193C17.5342 39.6611 18.3032 40.3049 18.8501 41.2505C19.397 42.1847 19.6305 43.2899 19.5508 44.5659C19.3913 46.9129 18.4684 48.7415 16.7822 50.0518C15.1074 51.3506 12.8174 52 9.91211 52H0.358887ZM7.26318 41.165L6.08398 47.8813L10.0317 47.8984C11.2622 47.8984 12.2933 47.5965 13.125 46.9927C13.9567 46.3774 14.4523 45.5514 14.6118 44.5146C14.7713 43.4893 14.6289 42.6917 14.1846 42.1221C13.7516 41.541 13.0168 41.2277 11.98 41.1821L7.26318 41.165ZM7.87842 37.542L11.2793 37.5762C12.5439 37.5534 13.575 37.2572 14.3726 36.6875C15.1815 36.1178 15.6657 35.326 15.8252 34.312C16.11 32.3068 15.0562 31.2985 12.6636 31.2871L8.97217 31.27L7.87842 37.542ZM32.8638 42.8911H28.7964L27.207 52H22.1997L26.5234 27.1172L34.7607 27.1343C37.5179 27.1343 39.637 27.7837 41.1182 29.0825C42.6107 30.3813 43.2715 32.1872 43.1006 34.5C42.8613 37.918 41.0384 40.2935 37.6318 41.6265L41.1353 51.7266V52H35.8032L32.8638 42.8911ZM29.5142 38.7383L33.2397 38.7725C34.5614 38.7497 35.6494 38.3965 36.5039 37.7129C37.3698 37.0179 37.8882 36.078 38.0591 34.8931C38.2186 33.7879 38.042 32.922 37.5293 32.2954C37.0166 31.6688 36.202 31.3327 35.0854 31.2871L30.813 31.27L29.5142 38.7383ZM66.7358 27.1172L63.9331 43.5234C63.5457 46.2692 62.4064 48.4396 60.5151 50.0347C58.6239 51.6297 56.2769 52.4045 53.4741 52.3589C51.7196 52.3247 50.1929 51.943 48.894 51.2139C47.6066 50.4733 46.6553 49.4365 46.04 48.1035C45.4248 46.7591 45.214 45.2381 45.4077 43.5405L48.1934 27.1172H53.2007L50.415 43.5576C50.3353 44.1956 50.3296 44.7938 50.3979 45.3521C50.6258 47.1978 51.7253 48.1548 53.6963 48.2231C55.109 48.2687 56.2655 47.8813 57.1655 47.061C58.0656 46.2407 58.6466 45.0672 58.9087 43.5405L61.7114 27.1172H66.7358ZM86.2354 52H81.3818L74.4604 35.4058L71.5723 52H66.5649L70.8887 27.1172H75.7251L82.6636 43.7456L85.5518 27.1172H90.542L86.2354 52ZM111.016 43.6943C110.822 45.4147 110.235 46.9414 109.255 48.2744C108.276 49.596 107 50.6157 105.427 51.3335C103.855 52.0399 102.157 52.376 100.334 52.3418C98.6938 52.3076 97.264 51.9316 96.0449 51.2139C94.8258 50.4847 93.8631 49.4365 93.1567 48.0693C92.4618 46.6908 92.0687 45.1071 91.9775 43.3184C91.8978 41.917 92.0402 40.1738 92.4048 38.0889C92.7808 36.0039 93.4416 34.1525 94.3872 32.5347C95.3442 30.9168 96.4779 29.6351 97.7881 28.6895C99.6338 27.3678 101.742 26.7298 104.111 26.7754C106.686 26.821 108.726 27.6185 110.229 29.168C111.745 30.7061 112.576 32.848 112.725 35.5938L107.734 35.5767C107.734 34.0044 107.421 32.8537 106.794 32.1245C106.168 31.3953 105.194 31.008 103.872 30.9624C102.163 30.9054 100.756 31.515 99.6509 32.791C98.5571 34.0671 97.8223 35.9299 97.4463 38.3794C97.0817 40.7606 96.9222 42.5436 96.9678 43.7285C97.0247 45.2324 97.3608 46.3433 97.9761 47.061C98.5913 47.7674 99.4515 48.1377 100.557 48.1719C102.083 48.2288 103.302 47.87 104.214 47.0952C105.137 46.3091 105.746 45.1868 106.042 43.7285L111.016 43.6943ZM132.805 52H127.798L129.644 41.3359H119.988L118.125 52H113.118L117.441 27.1172H122.449L120.688 37.2002H130.361L132.104 27.1172H137.112L132.805 52Z\"\r\n              fill=\"#FF7B51\"\r\n            />\r\n            <path d=\"M0 55.418H136.924V57.127H0V55.418Z\" fill=\"#FF7B51\" />\r\n          </svg>\r\n        </Link>\r\n      </div>\r\n\r\n      {data ? (\r\n        <div className=\"cardwrapper\">\r\n          <div className=\"cardContainer\">\r\n            <BookingCardCancellation bookingObj={data} />\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <p>Looking for booking...</p>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CancellationComponent;\r\n","import { Link } from \"react-router-dom\";\r\nexport default function ConfirmCancellationComponent() {\r\n  return (\r\n    <div className=\"confirmCancellation-wrapper\">\r\n      <Link to=\"/\">\r\n        <svg\r\n          className=\"heading\"\r\n          width=\"10em\"\r\n          height=\"6em\"\r\n          viewBox=\"0 0 150 66\"\r\n          fill=\"none\"\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n        >\r\n          <path\r\n            d=\"M1.74805 18H0.576172L3.18359 3H4.35547L1.74805 18ZM11.4746 18C11.4421 17.7526 11.4323 17.5052 11.4453 17.2578L11.5332 16.5254C11.0449 17.0527 10.485 17.4661 9.85352 17.7656C9.22852 18.0651 8.55143 18.2083 7.82227 18.1953C6.93034 18.1823 6.20443 17.9023 5.64453 17.3555C5.09115 16.8021 4.84375 16.1087 4.90234 15.2754C4.95443 14.5788 5.19206 13.9766 5.61523 13.4688C6.04492 12.9544 6.65365 12.5573 7.44141 12.2773C8.22917 11.9909 9.11133 11.8477 10.0879 11.8477L12.2461 11.8574L12.4219 10.6465C12.5 9.92383 12.3438 9.3444 11.9531 8.9082C11.5625 8.47201 10.9863 8.24089 10.2246 8.21484C9.45638 8.20182 8.78581 8.39388 8.21289 8.79102C7.64648 9.18164 7.29167 9.69922 7.14844 10.3438H6.00586C6.13607 9.41927 6.61133 8.66732 7.43164 8.08789C8.25195 7.50195 9.22201 7.21549 10.3418 7.22852C11.429 7.25456 12.2656 7.58333 12.8516 8.21484C13.444 8.84635 13.6849 9.66667 13.5742 10.6758L12.6953 15.9883L12.6172 16.8379C12.5977 17.1895 12.6237 17.5378 12.6953 17.8828L12.6758 18H11.4746ZM8.01758 17.1699C8.73372 17.196 9.41732 17.0267 10.0684 16.6621C10.7259 16.291 11.2695 15.7669 11.6992 15.0898L12.0996 12.7559L10.2344 12.7461C9.04948 12.7461 8.08268 12.9577 7.33398 13.3809C6.58529 13.7975 6.17188 14.3965 6.09375 15.1777C6.03516 15.7507 6.1849 16.2227 6.54297 16.5938C6.90755 16.9648 7.39909 17.1569 8.01758 17.1699ZM19.4824 4.72852L19.0137 7.43359H21.1328L20.9668 8.39062H18.8477L17.6758 15.4414L17.6562 16.0469C17.6562 16.7565 17.9818 17.1211 18.6328 17.1406C18.8346 17.1471 19.1504 17.1243 19.5801 17.0723L19.5312 18.0293C19.1471 18.14 18.7565 18.1888 18.3594 18.1758C17.6758 18.1628 17.1777 17.9251 16.8652 17.4629C16.5527 16.9941 16.4388 16.3171 16.5234 15.4316L17.6855 8.39062H15.791L15.9668 7.43359H17.8418L18.3203 4.72852H19.4824ZM25.9082 18.1953C25.0618 18.1823 24.3294 17.9479 23.7109 17.4922C23.0924 17.0299 22.6367 16.4049 22.3438 15.6172C22.0573 14.8229 21.9564 13.9668 22.041 13.0488L22.0703 12.7168C22.1615 11.7402 22.4512 10.8125 22.9395 9.93359C23.4277 9.04818 24.0462 8.37435 24.7949 7.91211C25.5436 7.44336 26.3444 7.21875 27.1973 7.23828C27.985 7.2513 28.6491 7.46615 29.1895 7.88281C29.7363 8.29948 30.1335 8.87891 30.3809 9.62109C30.6283 10.3633 30.7064 11.1836 30.6152 12.082L30.5371 12.7949H23.2227L23.1934 13.0293C23.0957 13.7389 23.1478 14.4193 23.3496 15.0703C23.5514 15.7148 23.8802 16.2292 24.3359 16.6133C24.7982 16.9909 25.3516 17.1862 25.9961 17.1992C26.6211 17.2188 27.1842 17.0983 27.6855 16.8379C28.1868 16.5775 28.6491 16.2292 29.0723 15.793L29.7559 16.3496C29.2806 16.9616 28.7142 17.4271 28.0566 17.7461C27.4056 18.0586 26.6895 18.2083 25.9082 18.1953ZM27.1387 8.23438C26.2923 8.20182 25.5339 8.5013 24.8633 9.13281C24.1927 9.76432 23.6882 10.653 23.3496 11.7988L29.4824 11.8086L29.5117 11.6621C29.6289 10.7376 29.4661 9.94336 29.0234 9.2793C28.5807 8.60872 27.9525 8.26042 27.1387 8.23438ZM39.6094 7.43359L39.2578 9.24023C39.7266 8.58919 40.2669 8.09115 40.8789 7.74609C41.4974 7.39453 42.1582 7.22526 42.8613 7.23828C43.877 7.26432 44.6159 7.61914 45.0781 8.30273C45.5404 8.98633 45.7031 9.92708 45.5664 11.125L44.4141 18H43.2617L44.4141 11.1055C44.4531 10.7344 44.4596 10.3763 44.4336 10.0312C44.3229 8.8724 43.6914 8.27669 42.5391 8.24414C41.8555 8.23112 41.2174 8.4362 40.625 8.85938C40.0326 9.27604 39.5117 9.90755 39.0625 10.7539L37.8125 18H36.6602L38.4961 7.43359H39.6094ZM48.7207 18H47.5488L49.3945 7.43359H50.5566L48.7207 18ZM49.7168 4.37695C49.7493 3.95378 50.0293 3.68685 50.5566 3.57617C50.8105 3.62174 50.9896 3.70312 51.0938 3.82031C51.2044 3.93099 51.276 4.11654 51.3086 4.37695C51.2435 4.62435 51.1491 4.80664 51.0254 4.92383C50.9017 5.03451 50.7161 5.11589 50.4688 5.16797C49.9414 5.08984 49.6908 4.82617 49.7168 4.37695ZM57.1387 7.22852C57.7702 7.24805 58.3464 7.39779 58.8672 7.67773C59.388 7.95768 59.7982 8.38411 60.0977 8.95703L60.459 7.43359H61.543L59.7656 17.8145C59.6419 18.6999 59.362 19.4811 58.9258 20.1582C58.4896 20.8353 57.9297 21.3529 57.2461 21.7109C56.569 22.0755 55.8138 22.2448 54.9805 22.2188C54.3164 22.2057 53.6816 22.0397 53.0762 21.7207C52.4642 21.3952 51.9727 20.9427 51.6016 20.3633L52.3242 19.6797C52.9948 20.6888 53.8704 21.2064 54.9512 21.2324C55.9147 21.2585 56.7188 20.9655 57.3633 20.3535C58.0143 19.748 58.4245 18.9212 58.5938 17.873L58.8477 16.6426C57.9102 17.7168 56.7806 18.2344 55.459 18.1953C54.4694 18.1693 53.6979 17.7917 53.1445 17.0625C52.5977 16.3268 52.3112 15.3275 52.2852 14.0645C52.2461 12.8991 52.4414 11.7467 52.8711 10.6074C53.3008 9.4681 53.8835 8.61523 54.6191 8.04883C55.3613 7.47591 56.2012 7.20247 57.1387 7.22852ZM53.5059 12.8926L53.4473 13.8008C53.4277 14.8685 53.6133 15.6953 54.0039 16.2812C54.3945 16.8607 54.9707 17.1634 55.7324 17.1895C56.3835 17.2155 56.9922 17.0625 57.5586 16.7305C58.125 16.3984 58.6133 15.9069 59.0234 15.2559L59.8535 10.3242C59.6777 9.69271 59.3717 9.19466 58.9355 8.83008C58.5059 8.45898 57.9525 8.26367 57.2754 8.24414C56.2793 8.21159 55.4525 8.5957 54.7949 9.39648C54.1439 10.1973 53.7142 11.3626 53.5059 12.8926ZM65.3418 9.2207C66.3574 7.87305 67.5553 7.21224 68.9355 7.23828C69.9512 7.26432 70.6901 7.61914 71.1523 8.30273C71.6146 8.98633 71.7773 9.92708 71.6406 11.125L70.4883 18H69.3359L70.4883 11.1055C70.5273 10.7344 70.5339 10.3763 70.5078 10.0312C70.3971 8.8724 69.7656 8.27669 68.6133 8.24414C67.9297 8.23112 67.2917 8.4362 66.6992 8.85938C66.1068 9.27604 65.5859 9.90755 65.1367 10.7539L63.8867 18H62.7344L65.3418 3H66.4941L65.3418 9.2207ZM77.5684 4.72852L77.0996 7.43359H79.2188L79.0527 8.39062H76.9336L75.7617 15.4414L75.7422 16.0469C75.7422 16.7565 76.0677 17.1211 76.7188 17.1406C76.9206 17.1471 77.2363 17.1243 77.666 17.0723L77.6172 18.0293C77.2331 18.14 76.8424 18.1888 76.4453 18.1758C75.7617 18.1628 75.2637 17.9251 74.9512 17.4629C74.6387 16.9941 74.5247 16.3171 74.6094 15.4316L75.7715 8.39062H73.877L74.0527 7.43359H75.9277L76.4062 4.72852H77.5684Z\"\r\n            fill=\"#FF7B51\"\r\n          />\r\n          <path\r\n            d=\"M0.358887 52L4.68262 27.1172L12.4414 27.1343C15.3239 27.1457 17.4886 27.7324 18.9355 28.8945C20.3825 30.0566 21.0376 31.6916 20.9009 33.7993C20.7414 36.3172 19.2887 38.1572 16.543 39.3193C17.5342 39.6611 18.3032 40.3049 18.8501 41.2505C19.397 42.1847 19.6305 43.2899 19.5508 44.5659C19.3913 46.9129 18.4684 48.7415 16.7822 50.0518C15.1074 51.3506 12.8174 52 9.91211 52H0.358887ZM7.26318 41.165L6.08398 47.8813L10.0317 47.8984C11.2622 47.8984 12.2933 47.5965 13.125 46.9927C13.9567 46.3774 14.4523 45.5514 14.6118 44.5146C14.7713 43.4893 14.6289 42.6917 14.1846 42.1221C13.7516 41.541 13.0168 41.2277 11.98 41.1821L7.26318 41.165ZM7.87842 37.542L11.2793 37.5762C12.5439 37.5534 13.575 37.2572 14.3726 36.6875C15.1815 36.1178 15.6657 35.326 15.8252 34.312C16.11 32.3068 15.0562 31.2985 12.6636 31.2871L8.97217 31.27L7.87842 37.542ZM32.8638 42.8911H28.7964L27.207 52H22.1997L26.5234 27.1172L34.7607 27.1343C37.5179 27.1343 39.637 27.7837 41.1182 29.0825C42.6107 30.3813 43.2715 32.1872 43.1006 34.5C42.8613 37.918 41.0384 40.2935 37.6318 41.6265L41.1353 51.7266V52H35.8032L32.8638 42.8911ZM29.5142 38.7383L33.2397 38.7725C34.5614 38.7497 35.6494 38.3965 36.5039 37.7129C37.3698 37.0179 37.8882 36.078 38.0591 34.8931C38.2186 33.7879 38.042 32.922 37.5293 32.2954C37.0166 31.6688 36.202 31.3327 35.0854 31.2871L30.813 31.27L29.5142 38.7383ZM66.7358 27.1172L63.9331 43.5234C63.5457 46.2692 62.4064 48.4396 60.5151 50.0347C58.6239 51.6297 56.2769 52.4045 53.4741 52.3589C51.7196 52.3247 50.1929 51.943 48.894 51.2139C47.6066 50.4733 46.6553 49.4365 46.04 48.1035C45.4248 46.7591 45.214 45.2381 45.4077 43.5405L48.1934 27.1172H53.2007L50.415 43.5576C50.3353 44.1956 50.3296 44.7938 50.3979 45.3521C50.6258 47.1978 51.7253 48.1548 53.6963 48.2231C55.109 48.2687 56.2655 47.8813 57.1655 47.061C58.0656 46.2407 58.6466 45.0672 58.9087 43.5405L61.7114 27.1172H66.7358ZM86.2354 52H81.3818L74.4604 35.4058L71.5723 52H66.5649L70.8887 27.1172H75.7251L82.6636 43.7456L85.5518 27.1172H90.542L86.2354 52ZM111.016 43.6943C110.822 45.4147 110.235 46.9414 109.255 48.2744C108.276 49.596 107 50.6157 105.427 51.3335C103.855 52.0399 102.157 52.376 100.334 52.3418C98.6938 52.3076 97.264 51.9316 96.0449 51.2139C94.8258 50.4847 93.8631 49.4365 93.1567 48.0693C92.4618 46.6908 92.0687 45.1071 91.9775 43.3184C91.8978 41.917 92.0402 40.1738 92.4048 38.0889C92.7808 36.0039 93.4416 34.1525 94.3872 32.5347C95.3442 30.9168 96.4779 29.6351 97.7881 28.6895C99.6338 27.3678 101.742 26.7298 104.111 26.7754C106.686 26.821 108.726 27.6185 110.229 29.168C111.745 30.7061 112.576 32.848 112.725 35.5938L107.734 35.5767C107.734 34.0044 107.421 32.8537 106.794 32.1245C106.168 31.3953 105.194 31.008 103.872 30.9624C102.163 30.9054 100.756 31.515 99.6509 32.791C98.5571 34.0671 97.8223 35.9299 97.4463 38.3794C97.0817 40.7606 96.9222 42.5436 96.9678 43.7285C97.0247 45.2324 97.3608 46.3433 97.9761 47.061C98.5913 47.7674 99.4515 48.1377 100.557 48.1719C102.083 48.2288 103.302 47.87 104.214 47.0952C105.137 46.3091 105.746 45.1868 106.042 43.7285L111.016 43.6943ZM132.805 52H127.798L129.644 41.3359H119.988L118.125 52H113.118L117.441 27.1172H122.449L120.688 37.2002H130.361L132.104 27.1172H137.112L132.805 52Z\"\r\n            fill=\"#FF7B51\"\r\n          />\r\n          <path d=\"M0 55.418H136.924V57.127H0V55.418Z\" fill=\"#FF7B51\" />\r\n        </svg>\r\n      </Link>\r\n\r\n      <div className=\"confirmCancellation-container\">\r\n        <h1>Your booking has been cancelled! </h1>\r\n        <p>Be sure to check your email for confirmation</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { Link } from \"react-router-dom\";\r\n\r\nexport const BookingConfirmation = () => {\r\n  return (\r\n    <div className=\"bookingConfirmation-wrapper\">\r\n      <Link to=\"/\">\r\n        <svg\r\n          className=\"heading\"\r\n          width=\"10em\"\r\n          height=\"6em\"\r\n          viewBox=\"0 0 150 66\"\r\n          fill=\"none\"\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n        >\r\n          <path\r\n            d=\"M1.74805 18H0.576172L3.18359 3H4.35547L1.74805 18ZM11.4746 18C11.4421 17.7526 11.4323 17.5052 11.4453 17.2578L11.5332 16.5254C11.0449 17.0527 10.485 17.4661 9.85352 17.7656C9.22852 18.0651 8.55143 18.2083 7.82227 18.1953C6.93034 18.1823 6.20443 17.9023 5.64453 17.3555C5.09115 16.8021 4.84375 16.1087 4.90234 15.2754C4.95443 14.5788 5.19206 13.9766 5.61523 13.4688C6.04492 12.9544 6.65365 12.5573 7.44141 12.2773C8.22917 11.9909 9.11133 11.8477 10.0879 11.8477L12.2461 11.8574L12.4219 10.6465C12.5 9.92383 12.3438 9.3444 11.9531 8.9082C11.5625 8.47201 10.9863 8.24089 10.2246 8.21484C9.45638 8.20182 8.78581 8.39388 8.21289 8.79102C7.64648 9.18164 7.29167 9.69922 7.14844 10.3438H6.00586C6.13607 9.41927 6.61133 8.66732 7.43164 8.08789C8.25195 7.50195 9.22201 7.21549 10.3418 7.22852C11.429 7.25456 12.2656 7.58333 12.8516 8.21484C13.444 8.84635 13.6849 9.66667 13.5742 10.6758L12.6953 15.9883L12.6172 16.8379C12.5977 17.1895 12.6237 17.5378 12.6953 17.8828L12.6758 18H11.4746ZM8.01758 17.1699C8.73372 17.196 9.41732 17.0267 10.0684 16.6621C10.7259 16.291 11.2695 15.7669 11.6992 15.0898L12.0996 12.7559L10.2344 12.7461C9.04948 12.7461 8.08268 12.9577 7.33398 13.3809C6.58529 13.7975 6.17188 14.3965 6.09375 15.1777C6.03516 15.7507 6.1849 16.2227 6.54297 16.5938C6.90755 16.9648 7.39909 17.1569 8.01758 17.1699ZM19.4824 4.72852L19.0137 7.43359H21.1328L20.9668 8.39062H18.8477L17.6758 15.4414L17.6562 16.0469C17.6562 16.7565 17.9818 17.1211 18.6328 17.1406C18.8346 17.1471 19.1504 17.1243 19.5801 17.0723L19.5312 18.0293C19.1471 18.14 18.7565 18.1888 18.3594 18.1758C17.6758 18.1628 17.1777 17.9251 16.8652 17.4629C16.5527 16.9941 16.4388 16.3171 16.5234 15.4316L17.6855 8.39062H15.791L15.9668 7.43359H17.8418L18.3203 4.72852H19.4824ZM25.9082 18.1953C25.0618 18.1823 24.3294 17.9479 23.7109 17.4922C23.0924 17.0299 22.6367 16.4049 22.3438 15.6172C22.0573 14.8229 21.9564 13.9668 22.041 13.0488L22.0703 12.7168C22.1615 11.7402 22.4512 10.8125 22.9395 9.93359C23.4277 9.04818 24.0462 8.37435 24.7949 7.91211C25.5436 7.44336 26.3444 7.21875 27.1973 7.23828C27.985 7.2513 28.6491 7.46615 29.1895 7.88281C29.7363 8.29948 30.1335 8.87891 30.3809 9.62109C30.6283 10.3633 30.7064 11.1836 30.6152 12.082L30.5371 12.7949H23.2227L23.1934 13.0293C23.0957 13.7389 23.1478 14.4193 23.3496 15.0703C23.5514 15.7148 23.8802 16.2292 24.3359 16.6133C24.7982 16.9909 25.3516 17.1862 25.9961 17.1992C26.6211 17.2188 27.1842 17.0983 27.6855 16.8379C28.1868 16.5775 28.6491 16.2292 29.0723 15.793L29.7559 16.3496C29.2806 16.9616 28.7142 17.4271 28.0566 17.7461C27.4056 18.0586 26.6895 18.2083 25.9082 18.1953ZM27.1387 8.23438C26.2923 8.20182 25.5339 8.5013 24.8633 9.13281C24.1927 9.76432 23.6882 10.653 23.3496 11.7988L29.4824 11.8086L29.5117 11.6621C29.6289 10.7376 29.4661 9.94336 29.0234 9.2793C28.5807 8.60872 27.9525 8.26042 27.1387 8.23438ZM39.6094 7.43359L39.2578 9.24023C39.7266 8.58919 40.2669 8.09115 40.8789 7.74609C41.4974 7.39453 42.1582 7.22526 42.8613 7.23828C43.877 7.26432 44.6159 7.61914 45.0781 8.30273C45.5404 8.98633 45.7031 9.92708 45.5664 11.125L44.4141 18H43.2617L44.4141 11.1055C44.4531 10.7344 44.4596 10.3763 44.4336 10.0312C44.3229 8.8724 43.6914 8.27669 42.5391 8.24414C41.8555 8.23112 41.2174 8.4362 40.625 8.85938C40.0326 9.27604 39.5117 9.90755 39.0625 10.7539L37.8125 18H36.6602L38.4961 7.43359H39.6094ZM48.7207 18H47.5488L49.3945 7.43359H50.5566L48.7207 18ZM49.7168 4.37695C49.7493 3.95378 50.0293 3.68685 50.5566 3.57617C50.8105 3.62174 50.9896 3.70312 51.0938 3.82031C51.2044 3.93099 51.276 4.11654 51.3086 4.37695C51.2435 4.62435 51.1491 4.80664 51.0254 4.92383C50.9017 5.03451 50.7161 5.11589 50.4688 5.16797C49.9414 5.08984 49.6908 4.82617 49.7168 4.37695ZM57.1387 7.22852C57.7702 7.24805 58.3464 7.39779 58.8672 7.67773C59.388 7.95768 59.7982 8.38411 60.0977 8.95703L60.459 7.43359H61.543L59.7656 17.8145C59.6419 18.6999 59.362 19.4811 58.9258 20.1582C58.4896 20.8353 57.9297 21.3529 57.2461 21.7109C56.569 22.0755 55.8138 22.2448 54.9805 22.2188C54.3164 22.2057 53.6816 22.0397 53.0762 21.7207C52.4642 21.3952 51.9727 20.9427 51.6016 20.3633L52.3242 19.6797C52.9948 20.6888 53.8704 21.2064 54.9512 21.2324C55.9147 21.2585 56.7188 20.9655 57.3633 20.3535C58.0143 19.748 58.4245 18.9212 58.5938 17.873L58.8477 16.6426C57.9102 17.7168 56.7806 18.2344 55.459 18.1953C54.4694 18.1693 53.6979 17.7917 53.1445 17.0625C52.5977 16.3268 52.3112 15.3275 52.2852 14.0645C52.2461 12.8991 52.4414 11.7467 52.8711 10.6074C53.3008 9.4681 53.8835 8.61523 54.6191 8.04883C55.3613 7.47591 56.2012 7.20247 57.1387 7.22852ZM53.5059 12.8926L53.4473 13.8008C53.4277 14.8685 53.6133 15.6953 54.0039 16.2812C54.3945 16.8607 54.9707 17.1634 55.7324 17.1895C56.3835 17.2155 56.9922 17.0625 57.5586 16.7305C58.125 16.3984 58.6133 15.9069 59.0234 15.2559L59.8535 10.3242C59.6777 9.69271 59.3717 9.19466 58.9355 8.83008C58.5059 8.45898 57.9525 8.26367 57.2754 8.24414C56.2793 8.21159 55.4525 8.5957 54.7949 9.39648C54.1439 10.1973 53.7142 11.3626 53.5059 12.8926ZM65.3418 9.2207C66.3574 7.87305 67.5553 7.21224 68.9355 7.23828C69.9512 7.26432 70.6901 7.61914 71.1523 8.30273C71.6146 8.98633 71.7773 9.92708 71.6406 11.125L70.4883 18H69.3359L70.4883 11.1055C70.5273 10.7344 70.5339 10.3763 70.5078 10.0312C70.3971 8.8724 69.7656 8.27669 68.6133 8.24414C67.9297 8.23112 67.2917 8.4362 66.6992 8.85938C66.1068 9.27604 65.5859 9.90755 65.1367 10.7539L63.8867 18H62.7344L65.3418 3H66.4941L65.3418 9.2207ZM77.5684 4.72852L77.0996 7.43359H79.2188L79.0527 8.39062H76.9336L75.7617 15.4414L75.7422 16.0469C75.7422 16.7565 76.0677 17.1211 76.7188 17.1406C76.9206 17.1471 77.2363 17.1243 77.666 17.0723L77.6172 18.0293C77.2331 18.14 76.8424 18.1888 76.4453 18.1758C75.7617 18.1628 75.2637 17.9251 74.9512 17.4629C74.6387 16.9941 74.5247 16.3171 74.6094 15.4316L75.7715 8.39062H73.877L74.0527 7.43359H75.9277L76.4062 4.72852H77.5684Z\"\r\n            fill=\"#FF7B51\"\r\n          />\r\n          <path\r\n            d=\"M0.358887 52L4.68262 27.1172L12.4414 27.1343C15.3239 27.1457 17.4886 27.7324 18.9355 28.8945C20.3825 30.0566 21.0376 31.6916 20.9009 33.7993C20.7414 36.3172 19.2887 38.1572 16.543 39.3193C17.5342 39.6611 18.3032 40.3049 18.8501 41.2505C19.397 42.1847 19.6305 43.2899 19.5508 44.5659C19.3913 46.9129 18.4684 48.7415 16.7822 50.0518C15.1074 51.3506 12.8174 52 9.91211 52H0.358887ZM7.26318 41.165L6.08398 47.8813L10.0317 47.8984C11.2622 47.8984 12.2933 47.5965 13.125 46.9927C13.9567 46.3774 14.4523 45.5514 14.6118 44.5146C14.7713 43.4893 14.6289 42.6917 14.1846 42.1221C13.7516 41.541 13.0168 41.2277 11.98 41.1821L7.26318 41.165ZM7.87842 37.542L11.2793 37.5762C12.5439 37.5534 13.575 37.2572 14.3726 36.6875C15.1815 36.1178 15.6657 35.326 15.8252 34.312C16.11 32.3068 15.0562 31.2985 12.6636 31.2871L8.97217 31.27L7.87842 37.542ZM32.8638 42.8911H28.7964L27.207 52H22.1997L26.5234 27.1172L34.7607 27.1343C37.5179 27.1343 39.637 27.7837 41.1182 29.0825C42.6107 30.3813 43.2715 32.1872 43.1006 34.5C42.8613 37.918 41.0384 40.2935 37.6318 41.6265L41.1353 51.7266V52H35.8032L32.8638 42.8911ZM29.5142 38.7383L33.2397 38.7725C34.5614 38.7497 35.6494 38.3965 36.5039 37.7129C37.3698 37.0179 37.8882 36.078 38.0591 34.8931C38.2186 33.7879 38.042 32.922 37.5293 32.2954C37.0166 31.6688 36.202 31.3327 35.0854 31.2871L30.813 31.27L29.5142 38.7383ZM66.7358 27.1172L63.9331 43.5234C63.5457 46.2692 62.4064 48.4396 60.5151 50.0347C58.6239 51.6297 56.2769 52.4045 53.4741 52.3589C51.7196 52.3247 50.1929 51.943 48.894 51.2139C47.6066 50.4733 46.6553 49.4365 46.04 48.1035C45.4248 46.7591 45.214 45.2381 45.4077 43.5405L48.1934 27.1172H53.2007L50.415 43.5576C50.3353 44.1956 50.3296 44.7938 50.3979 45.3521C50.6258 47.1978 51.7253 48.1548 53.6963 48.2231C55.109 48.2687 56.2655 47.8813 57.1655 47.061C58.0656 46.2407 58.6466 45.0672 58.9087 43.5405L61.7114 27.1172H66.7358ZM86.2354 52H81.3818L74.4604 35.4058L71.5723 52H66.5649L70.8887 27.1172H75.7251L82.6636 43.7456L85.5518 27.1172H90.542L86.2354 52ZM111.016 43.6943C110.822 45.4147 110.235 46.9414 109.255 48.2744C108.276 49.596 107 50.6157 105.427 51.3335C103.855 52.0399 102.157 52.376 100.334 52.3418C98.6938 52.3076 97.264 51.9316 96.0449 51.2139C94.8258 50.4847 93.8631 49.4365 93.1567 48.0693C92.4618 46.6908 92.0687 45.1071 91.9775 43.3184C91.8978 41.917 92.0402 40.1738 92.4048 38.0889C92.7808 36.0039 93.4416 34.1525 94.3872 32.5347C95.3442 30.9168 96.4779 29.6351 97.7881 28.6895C99.6338 27.3678 101.742 26.7298 104.111 26.7754C106.686 26.821 108.726 27.6185 110.229 29.168C111.745 30.7061 112.576 32.848 112.725 35.5938L107.734 35.5767C107.734 34.0044 107.421 32.8537 106.794 32.1245C106.168 31.3953 105.194 31.008 103.872 30.9624C102.163 30.9054 100.756 31.515 99.6509 32.791C98.5571 34.0671 97.8223 35.9299 97.4463 38.3794C97.0817 40.7606 96.9222 42.5436 96.9678 43.7285C97.0247 45.2324 97.3608 46.3433 97.9761 47.061C98.5913 47.7674 99.4515 48.1377 100.557 48.1719C102.083 48.2288 103.302 47.87 104.214 47.0952C105.137 46.3091 105.746 45.1868 106.042 43.7285L111.016 43.6943ZM132.805 52H127.798L129.644 41.3359H119.988L118.125 52H113.118L117.441 27.1172H122.449L120.688 37.2002H130.361L132.104 27.1172H137.112L132.805 52Z\"\r\n            fill=\"#FF7B51\"\r\n          />\r\n          <path d=\"M0 55.418H136.924V57.127H0V55.418Z\" fill=\"#FF7B51\" />\r\n        </svg>\r\n      </Link>\r\n\r\n      <div className=\"bookingConfirmation-container\">\r\n        <h1>Thanks for your booking</h1>\r\n        <p>Be sure to check your email for confirmation</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import { useState } from \"react\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport { IBookingState } from \"../../models/IBookingState\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Edit, Delete } from \"@material-ui/icons\";\r\nimport { randomIndexGen } from \"../../utils/randomIndexGen\";\r\nimport { DialogBox } from \"./ChildComponents/DialogBox\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport { deleteBookingAndSendConfirmation } from \"../../utils/deleteBookingFromDB\";\r\n\r\ninterface IBookingCard {\r\n  bookingObj: IBookingState;\r\n}\r\n\r\nexport default function BookingCard({ bookingObj }: IBookingCard) {\r\n  const [dialogBoxOpen, setDialogBoxOpen] = useState(false);\r\n\r\n  //randomIndexGen will pick a random emoji from this array and displayed on the top of each card\r\n  const foodEmojis = [\r\n    \"🍗\",\r\n    \"🥩\",\r\n    \"🥓\",\r\n    \"🍔\",\r\n    \"🍟\",\r\n    \"🍕\",\r\n    \"🌭\",\r\n    \"🥪\",\r\n    \"🌮\",\r\n    \"🌯\",\r\n    \"🥙\",\r\n    \"🍩\",\r\n    \"🧁\",\r\n    \"🍹\",\r\n    \"🍓\",\r\n    \"🥑\",\r\n    \"🥗\",\r\n  ];\r\n\r\n  const {\r\n    firstName,\r\n    lastName,\r\n    numberOfGuests,\r\n    numberOfTables,\r\n    date,\r\n    sitting,\r\n    bookingReference,\r\n  } = bookingObj;\r\n\r\n  const randomIdx: number = randomIndexGen(foodEmojis.length);\r\n\r\n  const toggleDialogBox = (): void => {\r\n    setDialogBoxOpen((prevState) => !prevState);\r\n  };\r\n  const deleteBookingFromDB = (): void => {\r\n    deleteBookingAndSendConfirmation(bookingObj);\r\n    toggleDialogBox();\r\n  };\r\n\r\n  return (\r\n    <Card className=\"booking-card\">\r\n      {dialogBoxOpen && (\r\n        <DialogBox\r\n          open={dialogBoxOpen}\r\n          closeDialog={toggleDialogBox}\r\n          deleteBooking={deleteBookingFromDB}\r\n        />\r\n      )}\r\n      <CardContent className=\"booking-card__content-container\">\r\n        <section className=\"booking-card__icon\">\r\n          {foodEmojis[randomIdx]}\r\n        </section>\r\n        <section className=\"booking-card__content\">\r\n          <div>\r\n            <span className=\"bold\">Guest: </span>\r\n            {`${firstName} ${lastName}`}\r\n          </div>\r\n          <div>\r\n            <span className=\"bold\">Party Size: </span>\r\n            {`${numberOfGuests} guests / ${numberOfTables} ${\r\n              numberOfTables === 1 ? \"table\" : \"tables\"\r\n            }`}\r\n          </div>\r\n          <div>\r\n            <span className=\"bold\">Arrival day: </span>\r\n            {`${date} / ${sitting}`}\r\n          </div>\r\n          <div>\r\n            <span className=\"bold\">Ref: </span>\r\n            {bookingReference}\r\n          </div>\r\n        </section>\r\n        <section className=\"booking-card__actions\">\r\n          <Divider light />\r\n          <div>\r\n            <div className=\"booking-card__actions__container\">\r\n              <Link\r\n                to={`/admin/edit/${bookingReference}`}\r\n                className=\"booking-card__actions--edit\"\r\n              >\r\n                <div className=\"edit-inner edit\">\r\n                  <Edit style={{ color: \"#FF7B51\" }} />\r\n                  <p>Edit</p>\r\n                </div>\r\n              </Link>\r\n              <Button\r\n                onClick={toggleDialogBox}\r\n                // to={`/admin/edit/${bookingReference}`}\r\n                className=\"booking-card__actions--edit\"\r\n              >\r\n                <div className=\"edit-inner delete\">\r\n                  <Delete style={{ color: \"#FF7B51\" }} />\r\n                  <p>Cancel</p>\r\n                </div>\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </section>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n\r\n//For debug purposes\r\nBookingCard.defaultProps = {\r\n  numberOfGuests: 3,\r\n  numberOfTables: 1,\r\n  firstName: \"Danny\",\r\n  lastName: \"Isaac\",\r\n  date: \"2021-09-29\",\r\n  sitting: \"18:00\",\r\n  bookingReference: \"SOM4rVuijjAFHfewPe\",\r\n};\r\n","import { useCollectionData } from \"react-firebase-hooks/firestore\";\r\nimport { db } from \"../../firebase\";\r\nimport BookingCard from \"./BookingCard\";\r\nimport { IBookingState } from \"../../models/IBookingState\";\r\nimport Spinner from \"../Bookings/ChildComponents/Spinner\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport const AdminBookingsComponent = () => {\r\n  // Getting the collection and sorting it after date\r\n  const bookinsRef = db.collection(\"bookings\").orderBy(\"date\");\r\n\r\n  //Fetching data by using a firebase hook.\r\n  const [snapshot, loading, error] = useCollectionData<IBookingState>(\r\n    bookinsRef,\r\n    {\r\n      //optional settings object that, in this case, returns the object ID form the DB\r\n      idField: \"id\",\r\n    }\r\n  );\r\n\r\n  const bookingCards = snapshot?.map((booking, i) => {\r\n    return <BookingCard bookingObj={booking} key={i} />;\r\n  });\r\n\r\n  return (\r\n    <main className=\"admin-bookings-page\">\r\n      <Link to=\"/\">\r\n        <svg\r\n          width=\"211\"\r\n          height=\"63\"\r\n          viewBox=\"0 0 211 63\"\r\n          fill=\"none\"\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          className=\"admin-logo \"\r\n        >\r\n          <path\r\n            d=\"M3.74805 15H2.57617L5.18359 0H6.35547L3.74805 15ZM11.0918 15.1953C10.2454 15.1823 9.51302 14.9479 8.89453 14.4922C8.27604 14.0299 7.82031 13.4049 7.52734 12.6172C7.24089 11.8229 7.13997 10.9668 7.22461 10.0488L7.25391 9.7168C7.34505 8.74023 7.63477 7.8125 8.12305 6.93359C8.61133 6.04818 9.22982 5.37435 9.97852 4.91211C10.7272 4.44336 11.528 4.21875 12.3809 4.23828C13.1686 4.2513 13.8327 4.46615 14.373 4.88281C14.9199 5.29948 15.3171 5.87891 15.5645 6.62109C15.8118 7.36328 15.89 8.18359 15.7988 9.08203L15.7207 9.79492H8.40625L8.37695 10.0293C8.2793 10.7389 8.33138 11.4193 8.5332 12.0703C8.73503 12.7148 9.0638 13.2292 9.51953 13.6133C9.98177 13.9909 10.5352 14.1862 11.1797 14.1992C11.8047 14.2188 12.3678 14.0983 12.8691 13.8379C13.3704 13.5775 13.8327 13.2292 14.2559 12.793L14.9395 13.3496C14.4642 13.9616 13.8978 14.4271 13.2402 14.7461C12.5892 15.0586 11.873 15.2083 11.0918 15.1953ZM12.3223 5.23438C11.4759 5.20182 10.7174 5.5013 10.0469 6.13281C9.3763 6.76432 8.87174 7.65299 8.5332 8.79883L14.666 8.80859L14.6953 8.66211C14.8125 7.73763 14.6497 6.94336 14.207 6.2793C13.7643 5.60872 13.1361 5.26042 12.3223 5.23438ZM21.1113 1.72852L20.6426 4.43359H22.7617L22.5957 5.39062H20.4766L19.3047 12.4414L19.2852 13.0469C19.2852 13.7565 19.6107 14.1211 20.2617 14.1406C20.4635 14.1471 20.7793 14.1243 21.209 14.0723L21.1602 15.0293C20.776 15.14 20.3854 15.1888 19.9883 15.1758C19.3047 15.1628 18.8066 14.9251 18.4941 14.4629C18.1816 13.9941 18.0677 13.3171 18.1523 12.4316L19.3145 5.39062H17.4199L17.5957 4.43359H19.4707L19.9492 1.72852H21.1113ZM25.1152 4.28711L24.4219 3.74023C25.112 2.93294 25.5417 2.1224 25.7109 1.30859L25.9453 0H27.0879L26.9121 1.11328C26.7103 2.38932 26.1113 3.44727 25.1152 4.28711ZM32.4883 12.2461C32.5924 11.3477 32.0456 10.6966 30.8477 10.293L29.168 9.79492C27.625 9.27409 26.8958 8.40495 26.9805 7.1875C27.026 6.30859 27.4297 5.5957 28.1914 5.04883C28.9596 4.49544 29.8711 4.22526 30.9258 4.23828C31.9609 4.2513 32.8008 4.54427 33.4453 5.11719C34.0898 5.68359 34.3893 6.44206 34.3438 7.39258H33.1914C33.2305 6.76107 33.0319 6.24674 32.5957 5.84961C32.166 5.45247 31.5931 5.2474 30.877 5.23438C30.1348 5.23438 29.5098 5.41016 29.002 5.76172C28.4941 6.10677 28.2077 6.56576 28.1426 7.13867C28.0449 7.97852 28.5592 8.56771 29.6855 8.90625L30.9062 9.25781L31.5605 9.48242C33.0319 10.0358 33.7253 10.9375 33.6406 12.1875C33.5885 13.0339 33.2207 13.7305 32.5371 14.2773C31.86 14.8177 30.9844 15.1204 29.9102 15.1855L29.5098 15.1953C28.8001 15.1823 28.1589 15.0456 27.5859 14.7852C27.013 14.5182 26.5736 14.1471 26.2676 13.6719C25.9616 13.1966 25.8281 12.6497 25.8672 12.0312L27.0293 12.041C27.0293 12.7051 27.2539 13.2292 27.7031 13.6133C28.1523 13.9974 28.7708 14.196 29.5586 14.209C30.3398 14.209 31.0039 14.0332 31.5508 13.6816C32.0977 13.3236 32.4102 12.8451 32.4883 12.2461Z\"\r\n            fill=\"#FF7B51\"\r\n          />\r\n          <path\r\n            d=\"M16.9878 43.873H8.30615L5.74268 49H0.222656L13.5186 24.1172H18.1499L22.8838 49H17.7739L16.9878 43.873ZM10.3569 39.7202H16.3555L14.9541 30.4575L10.3569 39.7202ZM34.2656 30.1499C35.986 30.1955 37.376 30.8848 38.4355 32.2178L40.2471 22.75H45.0835L40.5376 49H36.231L36.5044 47.0176C35.1258 48.624 33.5194 49.4045 31.6851 49.3589C30.5343 49.3475 29.526 49.0456 28.6602 48.4531C27.7943 47.8607 27.1221 47.0119 26.6436 45.9067C26.1764 44.7902 25.9201 43.5483 25.8745 42.1812C25.8403 41.4634 25.8574 40.7684 25.9258 40.0962L26.0283 39.3271C26.3018 37.4359 26.8258 35.7725 27.6006 34.3369C28.3867 32.9014 29.3438 31.8361 30.4717 31.1411C31.611 30.4461 32.8757 30.1157 34.2656 30.1499ZM30.7622 40.0962C30.6711 40.9621 30.6426 41.6912 30.6768 42.2837C30.7907 44.2889 31.5996 45.3086 33.1035 45.3428C34.4593 45.3997 35.6385 44.7617 36.6411 43.4287L37.957 36.0801C37.5127 34.861 36.624 34.223 35.291 34.166C34.1175 34.1318 33.1377 34.5876 32.3516 35.5332C31.5768 36.4674 31.047 37.9884 30.7622 40.0962ZM52.0903 30.4917L51.6973 32.5938C53.1898 30.9303 54.9956 30.1214 57.1147 30.167C58.2541 30.1898 59.1997 30.4518 59.9517 30.9531C60.7036 31.4544 61.2106 32.1323 61.4727 32.9868C63.1019 31.0614 65.016 30.1214 67.2148 30.167C68.9124 30.2012 70.1885 30.7822 71.043 31.9102C71.9089 33.0381 72.2734 34.6673 72.1367 36.7979L72.1025 37.2251L70.1372 49H65.3008L67.2661 37.1909C67.3117 36.7694 67.3288 36.3763 67.3174 36.0117C67.2376 34.8154 66.554 34.2002 65.2666 34.166C63.945 34.166 62.8114 34.8724 61.8657 36.2852L61.8145 36.6782L59.6611 49H54.8418L56.8071 37.2251C56.8527 36.8035 56.8698 36.4105 56.8584 36.0459C56.7786 34.8382 56.1007 34.2173 54.8247 34.1831C53.6056 34.1489 52.5062 34.7243 51.5264 35.9092L49.2192 49H44.3999L47.5957 30.5088L52.0903 30.4917ZM79.0581 49H74.2046L77.4175 30.5088H82.271L79.0581 49ZM77.9814 25.8091C77.9587 25.0457 78.2093 24.4134 78.7334 23.9121C79.2575 23.4108 79.8898 23.1602 80.6304 23.1602C81.3595 23.1374 81.9919 23.3595 82.5273 23.8267C83.0628 24.2938 83.342 24.8976 83.3647 25.6382C83.3875 26.3446 83.1483 26.9598 82.647 27.4839C82.1571 28.008 81.5133 28.2814 80.7158 28.3042C79.998 28.327 79.3657 28.1105 78.8188 27.6548C78.2834 27.1991 78.0042 26.5838 77.9814 25.8091ZM90.7817 30.4917L90.3716 32.6792C91.8527 30.9588 93.6471 30.1214 95.7549 30.167C97.498 30.2012 98.7855 30.8392 99.6172 32.0811C100.449 33.3229 100.751 35.0433 100.523 37.2422L98.5747 49H93.7554L95.7378 37.1909C95.7948 36.7466 95.8062 36.3421 95.772 35.9775C95.6239 34.8154 94.8947 34.2173 93.5845 34.1831C92.3198 34.1375 91.1862 34.7243 90.1836 35.9434L87.8765 49H83.0571L86.27 30.5088L90.7817 30.4917ZM107.461 49H102.608L105.821 30.5088H110.674L107.461 49ZM106.385 25.8091C106.362 25.0457 106.613 24.4134 107.137 23.9121C107.661 23.4108 108.293 23.1602 109.034 23.1602C109.763 23.1374 110.395 23.3595 110.931 23.8267C111.466 24.2938 111.745 24.8976 111.768 25.6382C111.791 26.3446 111.552 26.9598 111.05 27.4839C110.56 28.008 109.917 28.2814 109.119 28.3042C108.401 28.327 107.769 28.1105 107.222 27.6548C106.687 27.1991 106.408 26.5838 106.385 25.8091ZM122.278 43.7876C122.461 42.8761 121.828 42.2153 120.381 41.8052L118.826 41.4121C115.146 40.3981 113.357 38.6094 113.46 36.0459C113.517 34.3027 114.286 32.8843 115.767 31.7905C117.26 30.6854 119.054 30.1442 121.15 30.167C123.235 30.1898 124.922 30.7424 126.209 31.8247C127.496 32.9071 128.152 34.3483 128.174 36.1484L123.389 36.1313C123.412 34.5477 122.626 33.7445 121.031 33.7217C120.279 33.7217 119.624 33.9097 119.065 34.2856C118.519 34.6616 118.182 35.1686 118.057 35.8066C117.886 36.7181 118.576 37.3618 120.125 37.7378L120.809 37.8916C122.381 38.2676 123.583 38.7005 124.415 39.1904C125.246 39.6689 125.884 40.2671 126.329 40.9849C126.784 41.7026 126.995 42.5628 126.961 43.5654C126.927 44.7389 126.545 45.7643 125.816 46.6416C125.098 47.5189 124.107 48.1968 122.842 48.6753C121.589 49.1538 120.267 49.376 118.877 49.3418C116.827 49.319 115.118 48.7323 113.75 47.5815C112.383 46.4194 111.688 44.9212 111.666 43.0869L116.211 43.1211C116.257 44.887 117.203 45.7814 119.048 45.8042C119.937 45.8042 120.666 45.6219 121.236 45.2573C121.817 44.8927 122.164 44.4028 122.278 43.7876ZM138.975 25.9629L138.172 30.5088H141.248L140.616 34.1318H137.54L135.967 43.3945C135.899 43.9756 135.944 44.4199 136.104 44.7275C136.264 45.0352 136.651 45.2004 137.266 45.2231C137.448 45.2345 137.938 45.2061 138.736 45.1377L138.394 48.9146C137.54 49.1994 136.617 49.3304 135.625 49.3076C134.042 49.2848 132.863 48.7892 132.088 47.8208C131.313 46.8524 130.994 45.5422 131.131 43.8901L132.72 34.1318H130.105L130.738 30.5088H133.353L134.139 25.9629H138.975ZM153.519 35.1401C152.858 35.0262 152.317 34.9692 151.895 34.9692C150.175 34.9237 148.813 35.5674 147.811 36.9004L145.674 49H140.855L144.068 30.5088L148.597 30.4917L148.152 32.7476C149.314 31.0044 150.75 30.1328 152.459 30.1328C152.938 30.1328 153.496 30.2126 154.134 30.3721L153.519 35.1401ZM163.619 49C163.471 48.5329 163.408 47.9746 163.431 47.3252C162.041 48.7152 160.468 49.3874 158.714 49.3418C157.096 49.319 155.752 48.7949 154.681 47.7695C153.621 46.7327 153.125 45.4567 153.194 43.9414C153.274 41.9248 154.117 40.381 155.723 39.3101C157.341 38.2277 159.506 37.6865 162.217 37.6865L164.473 37.7207L164.712 36.6099C164.781 36.2339 164.798 35.875 164.764 35.5332C164.707 34.9977 164.502 34.5819 164.148 34.2856C163.807 33.978 163.351 33.8185 162.781 33.8071C162.029 33.7843 161.391 33.9723 160.867 34.3711C160.343 34.7585 160.007 35.3224 159.859 36.063L155.022 36.0801C155.102 34.3141 155.911 32.8843 157.449 31.7905C158.999 30.6854 160.907 30.1442 163.174 30.167C165.271 30.2126 166.911 30.8392 168.096 32.0469C169.281 33.2432 169.777 34.7869 169.583 36.6782L168.165 45.5308L168.079 46.6245C168.056 47.4334 168.153 48.117 168.37 48.6753L168.353 49H163.619ZM159.91 45.5991C161.3 45.6447 162.514 45.0409 163.55 43.7876L164.148 40.5918L162.474 40.5747C160.696 40.6203 159.415 41.1615 158.628 42.1982C158.344 42.5742 158.167 43.0356 158.099 43.5825C158.007 44.1978 158.133 44.6877 158.475 45.0522C158.828 45.4054 159.306 45.5877 159.91 45.5991ZM181.084 25.9629L180.281 30.5088H183.357L182.725 34.1318H179.649L178.077 43.3945C178.008 43.9756 178.054 44.4199 178.213 44.7275C178.373 45.0352 178.76 45.2004 179.375 45.2231C179.558 45.2345 180.048 45.2061 180.845 45.1377L180.503 48.9146C179.649 49.1994 178.726 49.3304 177.735 49.3076C176.151 49.2848 174.972 48.7892 174.197 47.8208C173.423 46.8524 173.104 45.5422 173.24 43.8901L174.83 34.1318H172.215L172.847 30.5088H175.462L176.248 25.9629H181.084ZM191.749 49.3418C190.131 49.3304 188.695 48.9373 187.442 48.1626C186.2 47.3765 185.271 46.3055 184.656 44.9497C184.041 43.5825 183.802 42.0786 183.938 40.438L183.99 39.7544C184.161 37.9543 184.685 36.3022 185.562 34.7983C186.439 33.2944 187.567 32.138 188.946 31.3291C190.324 30.5088 191.851 30.1214 193.526 30.167C195.907 30.2126 197.707 31.0898 198.926 32.7988C200.157 34.4964 200.624 36.6497 200.328 39.2588L200.054 41.3608H188.724C188.678 42.5571 188.969 43.5142 189.595 44.2319C190.222 44.9497 191.076 45.32 192.159 45.3428C193.913 45.3883 195.451 44.7104 196.773 43.3091L198.978 46.0435C198.283 47.0916 197.28 47.9119 195.97 48.5044C194.66 49.0854 193.252 49.3646 191.749 49.3418ZM193.287 34.1489C192.398 34.1261 191.606 34.4053 190.911 34.9863C190.228 35.5674 189.612 36.5757 189.065 38.0112H195.696L195.799 37.5669C195.867 37.1112 195.873 36.6782 195.816 36.2681C195.702 35.6073 195.423 35.0946 194.979 34.73C194.534 34.354 193.97 34.1603 193.287 34.1489Z\"\r\n            fill=\"#FF7B51\"\r\n          />\r\n          <path d=\"M2 52.418H201.438V54.127H2V52.418Z\" fill=\"#FF7B51\" />\r\n        </svg>\r\n      </Link>\r\n      {loading && <Spinner />}\r\n      {/* //Card components here */}\r\n      {!loading && (\r\n        <section className=\"booking-cards-container\">{bookingCards}</section>\r\n      )}\r\n      {error && error.message.toString()}\r\n    </main>\r\n  );\r\n};\r\n","import { getTodaysDate } from \"./getTodaysDate\";\r\n\r\n/**\r\n * Function to compare a date chosen by a user with today's date\r\n * @param dateToCompare date that we want to compare with today's date\r\n * @returns true if the date has passed, false if the date has not\r\n */\r\n\r\nexport const isDatePassed = (dateToCompare: string): boolean => {\r\n  const todaysDate = new Date(getTodaysDate()).getTime();\r\n  const datePickedByGuest = new Date(dateToCompare).getTime();\r\n  if (todaysDate > datePickedByGuest) {\r\n    return true;\r\n  } else {\r\n    return false;\r\n  }\r\n};\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { DocumentData } from \"@firebase/firestore-types\";\r\nimport {\r\n  TextField,\r\n  FormControlLabel,\r\n  Select,\r\n  MenuItem,\r\n  InputLabel,\r\n  Grid,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport { ChangeEvent, ReactNode, useEffect, useState } from \"react\";\r\nimport { useCollectionData } from \"react-firebase-hooks/firestore\";\r\nimport { Redirect, useParams } from \"react-router\";\r\nimport { db } from \"../../firebase\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport { updateComplexBookingObject } from \"../../utils/updateComplexBookingObject\";\r\nimport { isDatePassed } from \"../../utils/isDatePassed\";\r\nimport { checkAvailability } from \"../../utils/checkAvailability\";\r\nimport toast, { Toaster } from \"react-hot-toast\";\r\nimport { countNumberOfTables } from \"../../utils/countNumOfTables\";\r\nimport Spinner from \"../Bookings/ChildComponents/Spinner\";\r\n\r\nexport default function AdminEdit() {\r\n  interface IParams {\r\n    id: string;\r\n  }\r\n\r\n  const { id } = useParams<IParams>();\r\n\r\n  const bookingsCollectionRef = db.collection(\"bookings\");\r\n  const [snapshot, loading] = useCollectionData(bookingsCollectionRef, {\r\n    idField: \"id\",\r\n  });\r\n  const [isUpdateAllowed, setIsUpdateAllowed] = useState(false);\r\n  //booking is the booking we want to edit\r\n  const [booking, setBooking] = useState<DocumentData>();\r\n  const [redirect, setRedirect] = useState(false);\r\n\r\n  useEffect(() => {\r\n    // eslint-disable-next-line array-callback-return\r\n    snapshot?.map((booking, i) => {\r\n      if (booking.bookingReference === id) {\r\n        return setBooking(booking);\r\n      }\r\n    });\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [snapshot]);\r\n\r\n  //Handles the changes for all contact information input fields and the sittings radio buttons\r\n  function handleChangeInputFields(e: ChangeEvent) {\r\n    const { name, value } = e.target as HTMLInputElement;\r\n    const formFieldObject = { [name]: value };\r\n    updateComplexBookingObject(setBooking, formFieldObject);\r\n  }\r\n\r\n  //Handles changing the date, makes sure the date the Admin picks has not passed\r\n  function handleChangeDate(e: ChangeEvent) {\r\n    const dateChosen = (e.target as HTMLInputElement).value;\r\n    const datePassed: boolean = isDatePassed(dateChosen);\r\n    if (datePassed) {\r\n      return toast.error(\"Date you've picked has already passed\");\r\n    }\r\n    updateComplexBookingObject(setBooking, { date: dateChosen });\r\n  }\r\n\r\n  //Handles changing the number of guests\r\n  function handleChangeNumberOfGuests(\r\n    e: ChangeEvent<{\r\n      name?: string;\r\n      value: unknown;\r\n    }>\r\n  ) {\r\n    const numberOfGuests = Number((e.target as HTMLInputElement).value);\r\n    const numberOfTables = countNumberOfTables(numberOfGuests);\r\n    updateComplexBookingObject(setBooking, { numberOfGuests, numberOfTables });\r\n  }\r\n\r\n  //Handles form submition - Checks availability with the database and prevents\r\n  //use from submitting the form if no tables are available\r\n  function handleSubmit(e: React.FormEvent) {\r\n    e.preventDefault();\r\n\r\n    if (booking) {\r\n      //Check if there's availability on the selected date\r\n      const [sitting18, sitting21] = checkAvailability(snapshot!, booking.date);\r\n      const errorMessage =\r\n        \"There aren't enough tables for the date and sitting you've chosen\";\r\n      const datePassed = isDatePassed(booking.date);\r\n\r\n      //Make sure the date the admin chooses has not passed\r\n      if (datePassed) {\r\n        return toast.error(\r\n          \"Please make sure the date you've chosen hasn't already passed\"\r\n        );\r\n      }\r\n      //Make sure the chosen sitting is not fully booked\r\n      if (booking.sitting === \"18:00\") {\r\n        if (booking.numberOfTables + sitting18 > 15) {\r\n          return toast.error(errorMessage);\r\n        }\r\n        setIsUpdateAllowed(true);\r\n      } else {\r\n        if (booking.numberOfTables + sitting21 > 15) {\r\n          return toast.error(errorMessage);\r\n        }\r\n        setIsUpdateAllowed(true);\r\n      }\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    const updatedBooking = { ...booking };\r\n    //Delete the ID field from the object before sending it to the DB\r\n    //the ID is not save inside the actual object in the DB, so we don't want to send it back to the DB when we update the object\r\n    delete updatedBooking.id;\r\n    if (isUpdateAllowed) {\r\n      db.collection(\"bookings\").doc(booking?.id).update(updatedBooking);\r\n      setRedirect(true);\r\n    }\r\n  }, [isUpdateAllowed]);\r\n\r\n  if (redirect) {\r\n    return <Redirect to={`/admin/bookings`} />;\r\n  }\r\n\r\n  //adds 12 <MenuItem /> to the seclect tag\r\n  const selectOptions = (): ReactNode[] => {\r\n    let options = [];\r\n    for (let i = 0; i < 12; i++) {\r\n      options.push(\r\n        <MenuItem value={i + 1} key={i}>\r\n          {i + 1}\r\n        </MenuItem>\r\n      );\r\n    }\r\n    return options;\r\n  };\r\n\r\n  return (\r\n    <main className=\"edit-page\">\r\n      <Toaster />\r\n      {booking && <h1>Edit booking #{booking.bookingReference}</h1>}\r\n      {loading && <Spinner />}\r\n      {booking && (\r\n        <form onSubmit={(e) => handleSubmit(e)}>\r\n          <Grid\r\n            container\r\n            direction=\"column\"\r\n            justifyContent=\"center\"\r\n            alignItems=\"stretch\"\r\n            className=\"edit-page__inner-form\"\r\n          >\r\n            <TextField\r\n              value={booking.firstName}\r\n              variant=\"outlined\"\r\n              label=\"First Name\"\r\n              name=\"firstName\"\r\n              onChange={(e) => handleChangeInputFields(e)}\r\n            />\r\n            <TextField\r\n              value={booking.lastName}\r\n              variant=\"outlined\"\r\n              label=\"Last Name\"\r\n              name=\"lastName\"\r\n              onChange={(e) => handleChangeInputFields(e)}\r\n            />\r\n            <TextField\r\n              value={booking.email}\r\n              variant=\"outlined\"\r\n              label=\"Email Adress\"\r\n              name=\"email\"\r\n              onChange={(e) => handleChangeInputFields(e)}\r\n            />\r\n            <TextField\r\n              value={booking.number}\r\n              variant=\"outlined\"\r\n              label=\"Phone Number\"\r\n              name=\"number\"\r\n              onChange={(e) => handleChangeInputFields(e)}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid\r\n            container\r\n            direction=\"column\"\r\n            justifyContent=\"center\"\r\n            alignItems=\"stretch\"\r\n            className=\"edit-page__inner-form\"\r\n          >\r\n            <TextField\r\n              value={booking.date}\r\n              type=\"date\"\r\n              variant=\"outlined\"\r\n              label=\"Date of Arrival\"\r\n              onChange={(e) => handleChangeDate(e)}\r\n            />\r\n            <RadioGroup\r\n              aria-label=\"numberOfGuests\"\r\n              name=\"sitting\"\r\n              value={booking.sitting}\r\n              onChange={(e) => handleChangeInputFields(e)}\r\n            >\r\n              <FormControlLabel\r\n                value=\"18:00\"\r\n                control={<Radio />}\r\n                label=\"18:00\"\r\n              />\r\n              <FormControlLabel\r\n                value=\"21:00\"\r\n                control={<Radio />}\r\n                label=\"21:00\"\r\n              />\r\n            </RadioGroup>\r\n\r\n            <InputLabel id=\"numberOfGuests\">Number of guests</InputLabel>\r\n            <Select\r\n              id=\"numberOfGuests\"\r\n              label=\"Number of guests\"\r\n              value={booking.numberOfGuests}\r\n              variant=\"filled\"\r\n              onChange={(e) => handleChangeNumberOfGuests(e)}\r\n            >\r\n              {selectOptions()}\r\n            </Select>\r\n          </Grid>\r\n\r\n          <Button type=\"submit\" variant=\"outlined\" className=\"submit-btn\">\r\n            Check availability and update\r\n          </Button>\r\n        </form>\r\n      )}\r\n    </main>\r\n  );\r\n}\r\n","import { Fab } from \"@material-ui/core\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function HomeButtonComponent() {\r\n  return (\r\n    <div>\r\n      <Link to=\"/\" className=\"homeLink\">\r\n        <Fab variant=\"extended\" className=\"homeFab\">\r\n          <p className=\"homeButton\">Home</p>\r\n        </Fab>\r\n      </Link>\r\n    </div>\r\n  );\r\n}\r\n","import LandingPageComponent from \"./components/LandingPageComponent\";\r\nimport MenuComponent from \"./components/Menu/MenuComponent\";\r\nimport BookingsComponent from \"./components/Bookings/BookingsComponent\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport PageNotFound from \"./components/PageNotFound\";\r\nimport Contact from \"./components/Contact/Contact\";\r\nimport CancellationComponent from \"./components/Cancellation/CancellationComponent\";\r\nimport ConfirmCancellationComponent from \"./components/ConfirmCancellation/ConfirmCancellationComponent\";\r\nimport { BookingConfirmation } from \"./components/Bookings/BookingConfirmation\";\r\nimport { AdminBookingsComponent } from \"./components/Admin/AdminBookingsComponent\";\r\nimport AdminEditComponent from \"./components/Admin/AdminEditComponent\";\r\nimport HomeButtonComponent from \"./components/HomeButtonComponent\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Router>\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            <section className=\"homeContainer\">\r\n              <section className=\"homePage\">\r\n                <LandingPageComponent />\r\n                <MenuComponent />\r\n              </section>\r\n            </section>\r\n          </Route>\r\n          <Route path=\"/bookings\">\r\n            <HomeButtonComponent />\r\n            <BookingsComponent />\r\n          </Route>\r\n          <Route path=\"/confirmation\">\r\n            <HomeButtonComponent />\r\n            <BookingConfirmation />\r\n          </Route>\r\n          <Route path=\"/contact\">\r\n            <HomeButtonComponent />\r\n            <Contact />\r\n          </Route>\r\n          <Route path=\"/admin/bookings\">\r\n            <HomeButtonComponent />\r\n            <AdminBookingsComponent />\r\n          </Route>\r\n          <Route path=\"/admin/edit/:id\">\r\n            <HomeButtonComponent />\r\n            <AdminEditComponent />\r\n          </Route>\r\n          <Route path=\"/cancellation/:bookingReference\">\r\n            <HomeButtonComponent />\r\n            <CancellationComponent />\r\n          </Route>\r\n          <Route path=\"/confirmCancellation\">\r\n            <HomeButtonComponent />\r\n            <ConfirmCancellationComponent />\r\n          </Route>{\" \"}\r\n          <Route path=\"*\">\r\n            <HomeButtonComponent />\r\n            <PageNotFound />\r\n          </Route>\r\n        </Switch>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.scss\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}